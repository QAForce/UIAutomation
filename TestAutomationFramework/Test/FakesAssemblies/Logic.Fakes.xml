<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Logic.Fakes</name>
    </assembly>
    <members>
        <member name="T:Global.Fakes.ShimDEVMODE1">
            <summary>Shim type of DEVMODE1</summary>
        </member>
        <member name="M:Global.Fakes.ShimDEVMODE1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.ShimDEVMODE1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.ShimDEVMODE1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.ShimDEVMODE1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Global.Fakes.ShimDEVMODE1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimChangeScreenResolution">
            <summary>Shim type of Logic.Commands.ChangeScreenResolution</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimChangeScreenResolution.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimChangeScreenResolution.#ctor(Logic.Commands.ChangeScreenResolution)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimChangeScreenResolution.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimChangeScreenResolution.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimChangeScreenResolution.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimChangeScreenResolution.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of ChangeScreenResolution.ChangeScreenResolution(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimChangeScreenResolution.RunTestContainer">
            <summary>Sets the shim of ChangeScreenResolution.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimChangeScreenResolution.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimChangeScreenResolution.AllInstances.RunTestContainer">
            <summary>Sets the shim of ChangeScreenResolution.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimCheck">
            <summary>Shim type of Logic.Commands.Check</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimCheck.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimCheck.#ctor(Logic.Commands.Check)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimCheck.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimCheck.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCheck.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCheck.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of Check.Check(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCheck.RunTestContainer">
            <summary>Sets the shim of Check.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimCheck.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCheck.AllInstances.RunTestContainer">
            <summary>Sets the shim of Check.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimClick">
            <summary>Shim type of Logic.Commands.Click</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimClick.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimClick.#ctor(Logic.Commands.Click)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimClick.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimClick.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimClick.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimClick.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of Click.Click(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimClick.RunTestContainer">
            <summary>Sets the shim of Click.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimClick.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimClick.AllInstances.RunTestContainer">
            <summary>Sets the shim of Click.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimCommand">
            <summary>Shim type of Logic.Commands.Command</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimCommand.#ctor(Logic.Commands.Command)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.CommandFailScreenShotTestContainer">
            <summary>Sets the shim of Command.CommandFailScreenShot(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of Command.Command(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.DeepCopy">
            <summary>Sets the shim of Command.DeepCopy()</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.DescriptionGet">
            <summary>Sets the shim of Command.get_Description()</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.DescriptionSetString">
            <summary>Sets the shim of Command.set_Description(String value)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.GetOutPutStringKeyValuePairOfStringTupleOfTypeStringBooleanBooleanString">
            <summary>Sets the shim of Command.GetOutPut(String key, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Boolean pass, Boolean hasValue, String outputValue)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.GetParameterString">
            <summary>Sets the shim of Command.GetParameter(String parameterName)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.GetParameterWithoutExceptionString">
            <summary>Sets the shim of Command.GetParameterWithoutException(String parameterName)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.GetParametersString">
            <summary>Sets the shim of Command.GetParameters(String parameterName)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.GetTestPassExpectedBoolean">
            <summary>Sets the shim of Command.GetTestPassExpected(Boolean result)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.IdGet">
            <summary>Sets the shim of Command.get_Id()</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.IdSetString">
            <summary>Sets the shim of Command.set_Id(String value)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.IsCommandContinueTestContainer">
            <summary>Sets the shim of Command.IsCommandContinue(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.IsExecuteCommandGet">
            <summary>Sets the shim of Command.get_IsExecuteCommand()</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.IsExecuteCommandSetBoolean">
            <summary>Sets the shim of Command.set_IsExecuteCommand(Boolean value)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.IsExpectedFailGet">
            <summary>Sets the shim of Command.get_IsExpectedFail()</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.IsExpectedFailSetBoolean">
            <summary>Sets the shim of Command.set_IsExpectedFail(Boolean value)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.OutputGet">
            <summary>Sets the shim of Command.get_Output()</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.OutputSetKeyValuePairOfStringTupleOfTypeString">
            <summary>Sets the shim of Command.set_Output(KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; value)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.ParametersGet">
            <summary>Sets the shim of Command.get_Parameters()</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.ParametersSetDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of Command.set_Parameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; value)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.PassTestGet">
            <summary>Sets the shim of Command.get_PassTest()</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.PassTestSetBoolean">
            <summary>Sets the shim of Command.set_PassTest(Boolean value)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.SkipTestGet">
            <summary>Sets the shim of Command.get_SkipTest()</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.SkipTestSetBoolean">
            <summary>Sets the shim of Command.set_SkipTest(Boolean value)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.AllInstances.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.AllInstances.CommandFailScreenShotTestContainer">
            <summary>Sets the shim of Command.CommandFailScreenShot(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.AllInstances.DeepCopy">
            <summary>Sets the shim of Command.DeepCopy()</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.AllInstances.DescriptionGet">
            <summary>Sets the shim of Command.get_Description()</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.AllInstances.DescriptionSetString">
            <summary>Sets the shim of Command.set_Description(String value)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.AllInstances.GetOutPutStringKeyValuePairOfStringTupleOfTypeStringBooleanBooleanString">
            <summary>Sets the shim of Command.GetOutPut(String key, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Boolean pass, Boolean hasValue, String outputValue)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.AllInstances.GetParameterString">
            <summary>Sets the shim of Command.GetParameter(String parameterName)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.AllInstances.GetParameterWithoutExceptionString">
            <summary>Sets the shim of Command.GetParameterWithoutException(String parameterName)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.AllInstances.GetParametersString">
            <summary>Sets the shim of Command.GetParameters(String parameterName)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.AllInstances.GetTestPassExpectedBoolean">
            <summary>Sets the shim of Command.GetTestPassExpected(Boolean result)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.AllInstances.IdGet">
            <summary>Sets the shim of Command.get_Id()</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.AllInstances.IdSetString">
            <summary>Sets the shim of Command.set_Id(String value)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.AllInstances.IsCommandContinueTestContainer">
            <summary>Sets the shim of Command.IsCommandContinue(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.AllInstances.IsExecuteCommandGet">
            <summary>Sets the shim of Command.get_IsExecuteCommand()</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.AllInstances.IsExecuteCommandSetBoolean">
            <summary>Sets the shim of Command.set_IsExecuteCommand(Boolean value)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.AllInstances.IsExpectedFailGet">
            <summary>Sets the shim of Command.get_IsExpectedFail()</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.AllInstances.IsExpectedFailSetBoolean">
            <summary>Sets the shim of Command.set_IsExpectedFail(Boolean value)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.AllInstances.OutputGet">
            <summary>Sets the shim of Command.get_Output()</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.AllInstances.OutputSetKeyValuePairOfStringTupleOfTypeString">
            <summary>Sets the shim of Command.set_Output(KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; value)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.AllInstances.ParametersGet">
            <summary>Sets the shim of Command.get_Parameters()</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.AllInstances.ParametersSetDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of Command.set_Parameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; value)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.AllInstances.PassTestGet">
            <summary>Sets the shim of Command.get_PassTest()</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.AllInstances.PassTestSetBoolean">
            <summary>Sets the shim of Command.set_PassTest(Boolean value)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.AllInstances.SkipTestGet">
            <summary>Sets the shim of Command.get_SkipTest()</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommand.AllInstances.SkipTestSetBoolean">
            <summary>Sets the shim of Command.set_SkipTest(Boolean value)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimCommandFactory">
            <summary>Shim type of Logic.Commands.CommandFactory</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimCommandFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimCommandFactory.#ctor(Logic.Commands.CommandFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimCommandFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimCommandFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory.Constructor">
            <summary>Sets the shim of CommandFactory.CommandFactory()</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory.GetCommandParametersDictionaryOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of CommandFactory.GetCommandParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; template, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; source)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory.GetRestfulCommandListOfString">
            <summary>Sets the shim of CommandFactory.GetRestfulCommand(List`1&lt;String&gt; setting)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory.GetSqlCommandListOfString">
            <summary>Sets the shim of CommandFactory.GetSqlCommand(List`1&lt;String&gt; setting)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory.GetTestCaseListOfStringListOfSQLExecuteListOfRestfulCommandListOfVirtualCommandFuncOfXAttributeBoolean">
            <summary>Sets the shim of CommandFactory.GetTestCase(List`1&lt;String&gt; setting, List`1&lt;SQLExecute&gt; sqlCommands, List`1&lt;RestfulCommand&gt; restfulCommands, List`1&lt;VirtualCommand&gt; virtualCommands, Func`2&lt;XAttribute,Boolean&gt; filter)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory.GetVirtualCommandListOfStringListOfSQLExecuteListOfRestfulCommand">
            <summary>Sets the shim of CommandFactory.GetVirtualCommand(List`1&lt;String&gt; setting, List`1&lt;SQLExecute&gt; sqlCommands, List`1&lt;RestfulCommand&gt; restfulCommands)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory.XmlToCommandXElementArrayListOfSQLExecuteListOfRestfulCommandListOfVirtualCommand">
            <summary>Sets the shim of CommandFactory.XmlToCommand(XElement[] elements, List`1&lt;SQLExecute&gt; sqlCommands, List`1&lt;RestfulCommand&gt; restfulCommands, List`1&lt;VirtualCommand&gt; virtualCommands)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory.XmlToRestfulCommandString">
            <summary>Sets the shim of CommandFactory.XmlToRestfulCommand(String xmlFilePath)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory.XmlToSqlCommandString">
            <summary>Sets the shim of CommandFactory.XmlToSqlCommand(String xmlFilePath)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory.XmlToTestCaseStringListOfSQLExecuteListOfRestfulCommandListOfVirtualCommandFuncOfXAttributeBoolean">
            <summary>Sets the shim of CommandFactory.XmlToTestCase(String xmlFilePath, List`1&lt;SQLExecute&gt; sqlCommands, List`1&lt;RestfulCommand&gt; restfulCommands, List`1&lt;VirtualCommand&gt; virtualCommands, Func`2&lt;XAttribute,Boolean&gt; filter)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory.XmlToVirtualCommandStringListOfSQLExecuteListOfRestfulCommand">
            <summary>Sets the shim of CommandFactory.XmlToVirtualCommand(String xmlFilePath, List`1&lt;SQLExecute&gt; sqlCommands, List`1&lt;RestfulCommand&gt; restfulCommands)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._GetRestfulCommandb__0String">
            <summary>Sets the shim of CommandFactory.&lt;GetRestfulCommand&gt;b__0(String p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._GetRestfulCommandb__1String">
            <summary>Sets the shim of CommandFactory.&lt;GetRestfulCommand&gt;b__1(String p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._GetRestfulCommandb__2String">
            <summary>Sets the shim of CommandFactory.&lt;GetRestfulCommand&gt;b__2(String p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._GetRestfulCommandb__3String">
            <summary>Sets the shim of CommandFactory.&lt;GetRestfulCommand&gt;b__3(String p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._GetRestfulCommandb__4String">
            <summary>Sets the shim of CommandFactory.&lt;GetRestfulCommand&gt;b__4(String p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._GetRestfulCommandb__5RestfulCommand">
            <summary>Sets the shim of CommandFactory.&lt;GetRestfulCommand&gt;b__5(RestfulCommand p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._GetRestfulCommandb__6RestfulCommand">
            <summary>Sets the shim of CommandFactory.&lt;GetRestfulCommand&gt;b__6(RestfulCommand p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._GetSqlCommandb__26String">
            <summary>Sets the shim of CommandFactory.&lt;GetSqlCommand&gt;b__26(String p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._GetSqlCommandb__27String">
            <summary>Sets the shim of CommandFactory.&lt;GetSqlCommand&gt;b__27(String p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._GetSqlCommandb__28String">
            <summary>Sets the shim of CommandFactory.&lt;GetSqlCommand&gt;b__28(String p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._GetSqlCommandb__29String">
            <summary>Sets the shim of CommandFactory.&lt;GetSqlCommand&gt;b__29(String p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._GetSqlCommandb__2aString">
            <summary>Sets the shim of CommandFactory.&lt;GetSqlCommand&gt;b__2a(String p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._GetSqlCommandb__2bSQLExecute">
            <summary>Sets the shim of CommandFactory.&lt;GetSqlCommand&gt;b__2b(SQLExecute p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._GetSqlCommandb__2cSQLExecute">
            <summary>Sets the shim of CommandFactory.&lt;GetSqlCommand&gt;b__2c(SQLExecute p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._GetTestCaseb__83String">
            <summary>Sets the shim of CommandFactory.&lt;GetTestCase&gt;b__83(String p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._GetTestCaseb__84String">
            <summary>Sets the shim of CommandFactory.&lt;GetTestCase&gt;b__84(String p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._GetTestCaseb__85String">
            <summary>Sets the shim of CommandFactory.&lt;GetTestCase&gt;b__85(String p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._GetTestCaseb__86String">
            <summary>Sets the shim of CommandFactory.&lt;GetTestCase&gt;b__86(String p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._GetTestCaseb__87String">
            <summary>Sets the shim of CommandFactory.&lt;GetTestCase&gt;b__87(String p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._GetVirtualCommandb__55String">
            <summary>Sets the shim of CommandFactory.&lt;GetVirtualCommand&gt;b__55(String p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._GetVirtualCommandb__56String">
            <summary>Sets the shim of CommandFactory.&lt;GetVirtualCommand&gt;b__56(String p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._GetVirtualCommandb__57String">
            <summary>Sets the shim of CommandFactory.&lt;GetVirtualCommand&gt;b__57(String p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._GetVirtualCommandb__58String">
            <summary>Sets the shim of CommandFactory.&lt;GetVirtualCommand&gt;b__58(String p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._GetVirtualCommandb__59String">
            <summary>Sets the shim of CommandFactory.&lt;GetVirtualCommand&gt;b__59(String p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._GetVirtualCommandb__5aSQLExecute">
            <summary>Sets the shim of CommandFactory.&lt;GetVirtualCommand&gt;b__5a(SQLExecute p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._GetVirtualCommandb__5bVirtualCommand">
            <summary>Sets the shim of CommandFactory.&lt;GetVirtualCommand&gt;b__5b(VirtualCommand p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._GetVirtualCommandb__5cRestfulCommand">
            <summary>Sets the shim of CommandFactory.&lt;GetVirtualCommand&gt;b__5c(RestfulCommand p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._GetVirtualCommandb__5dVirtualCommand">
            <summary>Sets the shim of CommandFactory.&lt;GetVirtualCommand&gt;b__5d(VirtualCommand p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._GetVirtualCommandb__5eVirtualCommand">
            <summary>Sets the shim of CommandFactory.&lt;GetVirtualCommand&gt;b__5e(VirtualCommand p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._GetVirtualCommandb__5fVirtualCommand">
            <summary>Sets the shim of CommandFactory.&lt;GetVirtualCommand&gt;b__5f(VirtualCommand p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToCommandb__a4XAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToCommand&gt;b__a4(XAttribute tc)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToCommandb__a5XAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToCommand&gt;b__a5(XAttribute tc)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToCommandb__a6XAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToCommand&gt;b__a6(XAttribute tc)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToCommandb__a7XAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToCommand&gt;b__a7(XAttribute tc)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToCommandb__a8XAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToCommand&gt;b__a8(XAttribute p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToCommandb__a9XAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToCommand&gt;b__a9(XAttribute att)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToCommandb__aaXAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToCommand&gt;b__aa(XAttribute att)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToCommandb__abXAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToCommand&gt;b__ab(XAttribute att)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToCommandb__b4Command">
            <summary>Sets the shim of CommandFactory.&lt;XmlToCommand&gt;b__b4(Command p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToRestfulCommandb__11XAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToRestfulCommand&gt;b__11(XAttribute tc)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToRestfulCommandb__12XAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToRestfulCommand&gt;b__12(XAttribute tc)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToRestfulCommandb__13XAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToRestfulCommand&gt;b__13(XAttribute tc)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToRestfulCommandb__14XAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToRestfulCommand&gt;b__14(XAttribute x)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToRestfulCommandb__15XAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToRestfulCommand&gt;b__15(XAttribute x)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToRestfulCommandb__16XAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToRestfulCommand&gt;b__16(XAttribute att)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToRestfulCommandb__17XAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToRestfulCommand&gt;b__17(XAttribute att)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToRestfulCommandb__18XAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToRestfulCommand&gt;b__18(XAttribute att)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToSqlCommandb__37XAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToSqlCommand&gt;b__37(XAttribute tc)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToSqlCommandb__38XAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToSqlCommand&gt;b__38(XAttribute tc)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToSqlCommandb__39XAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToSqlCommand&gt;b__39(XAttribute tc)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToSqlCommandb__3aXAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToSqlCommand&gt;b__3a(XAttribute tc)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToSqlCommandb__3bXAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToSqlCommand&gt;b__3b(XAttribute tc)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToSqlCommandb__3cXAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToSqlCommand&gt;b__3c(XAttribute tc)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToSqlCommandb__3eXAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToSqlCommand&gt;b__3e(XAttribute x)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToSqlCommandb__3fXAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToSqlCommand&gt;b__3f(XAttribute x)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToSqlCommandb__40XAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToSqlCommand&gt;b__40(XAttribute att)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToSqlCommandb__41XAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToSqlCommand&gt;b__41(XAttribute att)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToSqlCommandb__42XAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToSqlCommand&gt;b__42(XAttribute att)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToTestCaseb__8fXAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToTestCase&gt;b__8f(XAttribute tc)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToTestCaseb__90XAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToTestCase&gt;b__90(XAttribute tc)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToTestCaseb__91XAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToTestCase&gt;b__91(XAttribute tc)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToTestCaseb__92String">
            <summary>Sets the shim of CommandFactory.&lt;XmlToTestCase&gt;b__92(String x)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToTestCaseb__93String">
            <summary>Sets the shim of CommandFactory.&lt;XmlToTestCase&gt;b__93(String x)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToVirtualCommandb__6eXAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToVirtualCommand&gt;b__6e(XAttribute tc)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToVirtualCommandb__6fXAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToVirtualCommand&gt;b__6f(XAttribute tc)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToVirtualCommandb__70XAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToVirtualCommand&gt;b__70(XAttribute tc)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToVirtualCommandb__71XAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToVirtualCommand&gt;b__71(XAttribute x)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToVirtualCommandb__72XAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToVirtualCommand&gt;b__72(XAttribute x)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToVirtualCommandb__73XAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToVirtualCommand&gt;b__73(XAttribute att)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToVirtualCommandb__74XAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToVirtualCommand&gt;b__74(XAttribute att)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._XmlToVirtualCommandb__75XAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToVirtualCommand&gt;b__75(XAttribute att)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._ctorb__daType">
            <summary>Sets the shim of CommandFactory.&lt;.ctor&gt;b__da(Type type)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory._ctorb__dbType">
            <summary>Sets the shim of CommandFactory.&lt;.ctor&gt;b__db(Type type)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimCommandFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory.AllInstances.GetCommandParametersDictionaryOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of CommandFactory.GetCommandParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; template, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; source)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory.AllInstances.GetRestfulCommandListOfString">
            <summary>Sets the shim of CommandFactory.GetRestfulCommand(List`1&lt;String&gt; setting)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory.AllInstances.GetSqlCommandListOfString">
            <summary>Sets the shim of CommandFactory.GetSqlCommand(List`1&lt;String&gt; setting)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory.AllInstances.GetTestCaseListOfStringListOfSQLExecuteListOfRestfulCommandListOfVirtualCommandFuncOfXAttributeBoolean">
            <summary>Sets the shim of CommandFactory.GetTestCase(List`1&lt;String&gt; setting, List`1&lt;SQLExecute&gt; sqlCommands, List`1&lt;RestfulCommand&gt; restfulCommands, List`1&lt;VirtualCommand&gt; virtualCommands, Func`2&lt;XAttribute,Boolean&gt; filter)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory.AllInstances.GetVirtualCommandListOfStringListOfSQLExecuteListOfRestfulCommand">
            <summary>Sets the shim of CommandFactory.GetVirtualCommand(List`1&lt;String&gt; setting, List`1&lt;SQLExecute&gt; sqlCommands, List`1&lt;RestfulCommand&gt; restfulCommands)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory.AllInstances.XmlToCommandXElementArrayListOfSQLExecuteListOfRestfulCommandListOfVirtualCommand">
            <summary>Sets the shim of CommandFactory.XmlToCommand(XElement[] elements, List`1&lt;SQLExecute&gt; sqlCommands, List`1&lt;RestfulCommand&gt; restfulCommands, List`1&lt;VirtualCommand&gt; virtualCommands)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory.AllInstances.XmlToRestfulCommandString">
            <summary>Sets the shim of CommandFactory.XmlToRestfulCommand(String xmlFilePath)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory.AllInstances.XmlToSqlCommandString">
            <summary>Sets the shim of CommandFactory.XmlToSqlCommand(String xmlFilePath)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory.AllInstances.XmlToTestCaseStringListOfSQLExecuteListOfRestfulCommandListOfVirtualCommandFuncOfXAttributeBoolean">
            <summary>Sets the shim of CommandFactory.XmlToTestCase(String xmlFilePath, List`1&lt;SQLExecute&gt; sqlCommands, List`1&lt;RestfulCommand&gt; restfulCommands, List`1&lt;VirtualCommand&gt; virtualCommands, Func`2&lt;XAttribute,Boolean&gt; filter)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory.AllInstances.XmlToVirtualCommandStringListOfSQLExecuteListOfRestfulCommand">
            <summary>Sets the shim of CommandFactory.XmlToVirtualCommand(String xmlFilePath, List`1&lt;SQLExecute&gt; sqlCommands, List`1&lt;RestfulCommand&gt; restfulCommands)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory.AllInstances._XmlToCommandb__a8XAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToCommand&gt;b__a8(XAttribute p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory.AllInstances._XmlToRestfulCommandb__14XAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToRestfulCommand&gt;b__14(XAttribute x)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory.AllInstances._XmlToRestfulCommandb__15XAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToRestfulCommand&gt;b__15(XAttribute x)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory.AllInstances._XmlToSqlCommandb__3eXAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToSqlCommand&gt;b__3e(XAttribute x)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory.AllInstances._XmlToSqlCommandb__3fXAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToSqlCommand&gt;b__3f(XAttribute x)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory.AllInstances._XmlToVirtualCommandb__71XAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToVirtualCommand&gt;b__71(XAttribute x)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimCommandFactory.AllInstances._XmlToVirtualCommandb__72XAttribute">
            <summary>Sets the shim of CommandFactory.&lt;XmlToVirtualCommand&gt;b__72(XAttribute x)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimExecJavascript">
            <summary>Shim type of Logic.Commands.ExecJavascript</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimExecJavascript.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimExecJavascript.#ctor(Logic.Commands.ExecJavascript)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimExecJavascript.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimExecJavascript.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimExecJavascript.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimExecJavascript.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of ExecJavascript.ExecJavascript(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimExecJavascript.RunTestContainer">
            <summary>Sets the shim of ExecJavascript.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimExecJavascript.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimExecJavascript.AllInstances.RunTestContainer">
            <summary>Sets the shim of ExecJavascript.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimExecJavascriptFile">
            <summary>Shim type of Logic.Commands.ExecJavascriptFile</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimExecJavascriptFile.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimExecJavascriptFile.#ctor(Logic.Commands.ExecJavascriptFile)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimExecJavascriptFile.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimExecJavascriptFile.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimExecJavascriptFile.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimExecJavascriptFile.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of ExecJavascriptFile.ExecJavascriptFile(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimExecJavascriptFile.RunTestContainer">
            <summary>Sets the shim of ExecJavascriptFile.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimExecJavascriptFile.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimExecJavascriptFile.AllInstances.RunTestContainer">
            <summary>Sets the shim of ExecJavascriptFile.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimGetScreenshot">
            <summary>Shim type of Logic.Commands.GetScreenshot</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimGetScreenshot.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimGetScreenshot.#ctor(Logic.Commands.GetScreenshot)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimGetScreenshot.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimGetScreenshot.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimGetScreenshot.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimGetScreenshot.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of GetScreenshot.GetScreenshot(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimGetScreenshot.RunTestContainer">
            <summary>Sets the shim of GetScreenshot.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimGetScreenshot.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimGetScreenshot.AllInstances.RunTestContainer">
            <summary>Sets the shim of GetScreenshot.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimGetWebTable">
            <summary>Shim type of Logic.Commands.GetWebTable</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimGetWebTable.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimGetWebTable.#ctor(Logic.Commands.GetWebTable)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimGetWebTable.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimGetWebTable.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimGetWebTable.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimGetWebTable.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of GetWebTable.GetWebTable(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimGetWebTable.RunTestContainer">
            <summary>Sets the shim of GetWebTable.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimGetWebTable.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimGetWebTable.AllInstances.RunTestContainer">
            <summary>Sets the shim of GetWebTable.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimGetXpathCount">
            <summary>Shim type of Logic.Commands.GetXpathCount</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimGetXpathCount.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimGetXpathCount.#ctor(Logic.Commands.GetXpathCount)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimGetXpathCount.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimGetXpathCount.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimGetXpathCount.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimGetXpathCount.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of GetXpathCount.GetXpathCount(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimGetXpathCount.RunTestContainer">
            <summary>Sets the shim of GetXpathCount.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimGetXpathCount.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimGetXpathCount.AllInstances.RunTestContainer">
            <summary>Sets the shim of GetXpathCount.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimMouseOver">
            <summary>Shim type of Logic.Commands.MouseOver</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimMouseOver.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimMouseOver.#ctor(Logic.Commands.MouseOver)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimMouseOver.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimMouseOver.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimMouseOver.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimMouseOver.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of MouseOver.MouseOver(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimMouseOver.RunTestContainer">
            <summary>Sets the shim of MouseOver.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimMouseOver.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimMouseOver.AllInstances.RunTestContainer">
            <summary>Sets the shim of MouseOver.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimOpenURL">
            <summary>Shim type of Logic.Commands.OpenURL</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimOpenURL.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimOpenURL.#ctor(Logic.Commands.OpenURL)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimOpenURL.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimOpenURL.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimOpenURL.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimOpenURL.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of OpenURL.OpenURL(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimOpenURL.RunTestContainer">
            <summary>Sets the shim of OpenURL.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimOpenURL.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimOpenURL.AllInstances.RunTestContainer">
            <summary>Sets the shim of OpenURL.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimPrintValue">
            <summary>Shim type of Logic.Commands.PrintValue</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimPrintValue.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimPrintValue.#ctor(Logic.Commands.PrintValue)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimPrintValue.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimPrintValue.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimPrintValue.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimPrintValue.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of PrintValue.PrintValue(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimPrintValue.RunTestContainer">
            <summary>Sets the shim of PrintValue.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimPrintValue.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimPrintValue.AllInstances.RunTestContainer">
            <summary>Sets the shim of PrintValue.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimRestfulAPI">
            <summary>Shim type of Logic.Commands.RestfulAPI</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimRestfulAPI.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimRestfulAPI.#ctor(Logic.Commands.RestfulAPI)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimRestfulAPI.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimRestfulAPI.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimRestfulAPI.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimRestfulAPI.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of RestfulAPI.RestfulAPI(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimRestfulAPI.RunTestContainer">
            <summary>Sets the shim of RestfulAPI.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimRestfulAPI.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimRestfulAPI.AllInstances.RunTestContainer">
            <summary>Sets the shim of RestfulAPI.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimRestfulCommand">
            <summary>Shim type of Logic.Commands.RestfulCommand</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimRestfulCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimRestfulCommand.#ctor(Logic.Commands.RestfulCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimRestfulCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimRestfulCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimRestfulCommand.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of RestfulCommand.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimRestfulCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimRestfulCommand.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of RestfulCommand.RestfulCommand(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimRestfulCommand.RunTestContainer">
            <summary>Sets the shim of RestfulCommand.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimRestfulCommand._Runb__0KeyValuePairOfStringTupleOfTypeString">
            <summary>Sets the shim of RestfulCommand.&lt;Run&gt;b__0(KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimRestfulCommand._Runb__1KeyValuePairOfStringTupleOfTypeString">
            <summary>Sets the shim of RestfulCommand.&lt;Run&gt;b__1(KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimRestfulCommand._Runb__2KeyValuePairOfStringTupleOfTypeString">
            <summary>Sets the shim of RestfulCommand.&lt;Run&gt;b__2(KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; p)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimRestfulCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimRestfulCommand.AllInstances.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of RestfulCommand.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimRestfulCommand.AllInstances.RunTestContainer">
            <summary>Sets the shim of RestfulCommand.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimSQLExecute">
            <summary>Shim type of Logic.Commands.SQLExecute</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimSQLExecute.#ctor(Logic.Commands.SQLExecute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimSQLExecute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimSQLExecute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSQLExecute.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of SQLExecute.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSQLExecute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSQLExecute.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeStringString">
            <summary>Sets the shim of SQLExecute.SQLExecute(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters, String database)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSQLExecute.DatabaseGet">
            <summary>Sets the shim of SQLExecute.get_Database()</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSQLExecute.DatabaseSetString">
            <summary>Sets the shim of SQLExecute.set_Database(String value)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSQLExecute.RunTestContainer">
            <summary>Sets the shim of SQLExecute.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSQLExecute._ApplyParametersb__0Match">
            <summary>Sets the shim of SQLExecute.&lt;ApplyParameters&gt;b__0(Match p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSQLExecute._ApplyParametersb__2KeyValuePairOfStringTupleOfTypeString">
            <summary>Sets the shim of SQLExecute.&lt;ApplyParameters&gt;b__2(KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSQLExecute._ApplyParametersb__3KeyValuePairOfStringTupleOfTypeString">
            <summary>Sets the shim of SQLExecute.&lt;ApplyParameters&gt;b__3(KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; p)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimSQLExecute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSQLExecute.AllInstances.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of SQLExecute.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSQLExecute.AllInstances.DatabaseGet">
            <summary>Sets the shim of SQLExecute.get_Database()</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSQLExecute.AllInstances.DatabaseSetString">
            <summary>Sets the shim of SQLExecute.set_Database(String value)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSQLExecute.AllInstances.RunTestContainer">
            <summary>Sets the shim of SQLExecute.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimSQLExecuteDataTable">
            <summary>Shim type of Logic.Commands.SQLExecuteDataTable</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimSQLExecuteDataTable.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimSQLExecuteDataTable.#ctor(Logic.Commands.SQLExecuteDataTable)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimSQLExecuteDataTable.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimSQLExecuteDataTable.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSQLExecuteDataTable.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSQLExecuteDataTable.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeStringString">
            <summary>Sets the shim of SQLExecuteDataTable.SQLExecuteDataTable(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters, String database)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSQLExecuteDataTable.DeepCopy">
            <summary>Sets the shim of SQLExecuteDataTable.DeepCopy()</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSQLExecuteDataTable.RunTestContainer">
            <summary>Sets the shim of SQLExecuteDataTable.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimSQLExecuteDataTable.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSQLExecuteDataTable.AllInstances.DeepCopy">
            <summary>Sets the shim of SQLExecuteDataTable.DeepCopy()</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSQLExecuteDataTable.AllInstances.RunTestContainer">
            <summary>Sets the shim of SQLExecuteDataTable.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimSQLExecuteNonQuery">
            <summary>Shim type of Logic.Commands.SQLExecuteNonQuery</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimSQLExecuteNonQuery.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimSQLExecuteNonQuery.#ctor(Logic.Commands.SQLExecuteNonQuery)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimSQLExecuteNonQuery.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimSQLExecuteNonQuery.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSQLExecuteNonQuery.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSQLExecuteNonQuery.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeStringString">
            <summary>Sets the shim of SQLExecuteNonQuery.SQLExecuteNonQuery(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters, String database)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSQLExecuteNonQuery.DeepCopy">
            <summary>Sets the shim of SQLExecuteNonQuery.DeepCopy()</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSQLExecuteNonQuery.RunTestContainer">
            <summary>Sets the shim of SQLExecuteNonQuery.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimSQLExecuteNonQuery.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSQLExecuteNonQuery.AllInstances.DeepCopy">
            <summary>Sets the shim of SQLExecuteNonQuery.DeepCopy()</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSQLExecuteNonQuery.AllInstances.RunTestContainer">
            <summary>Sets the shim of SQLExecuteNonQuery.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimSQLExecuteScalar">
            <summary>Shim type of Logic.Commands.SQLExecuteScalar</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimSQLExecuteScalar.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimSQLExecuteScalar.#ctor(Logic.Commands.SQLExecuteScalar)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimSQLExecuteScalar.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimSQLExecuteScalar.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSQLExecuteScalar.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSQLExecuteScalar.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeStringString">
            <summary>Sets the shim of SQLExecuteScalar.SQLExecuteScalar(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters, String database)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSQLExecuteScalar.DeepCopy">
            <summary>Sets the shim of SQLExecuteScalar.DeepCopy()</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSQLExecuteScalar.RunTestContainer">
            <summary>Sets the shim of SQLExecuteScalar.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimSQLExecuteScalar.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSQLExecuteScalar.AllInstances.DeepCopy">
            <summary>Sets the shim of SQLExecuteScalar.DeepCopy()</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSQLExecuteScalar.AllInstances.RunTestContainer">
            <summary>Sets the shim of SQLExecuteScalar.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimSelect">
            <summary>Shim type of Logic.Commands.Select</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimSelect.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimSelect.#ctor(Logic.Commands.Select)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimSelect.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimSelect.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSelect.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSelect.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of Select.Select(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSelect.RunTestContainer">
            <summary>Sets the shim of Select.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimSelect.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSelect.AllInstances.RunTestContainer">
            <summary>Sets the shim of Select.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimSelectCalendarDate">
            <summary>Shim type of Logic.Commands.SelectCalendarDate</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimSelectCalendarDate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimSelectCalendarDate.#ctor(Logic.Commands.SelectCalendarDate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimSelectCalendarDate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimSelectCalendarDate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSelectCalendarDate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSelectCalendarDate.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of SelectCalendarDate.SelectCalendarDate(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSelectCalendarDate.RunTestContainer">
            <summary>Sets the shim of SelectCalendarDate.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimSelectCalendarDate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSelectCalendarDate.AllInstances.RunTestContainer">
            <summary>Sets the shim of SelectCalendarDate.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimSendKeys">
            <summary>Shim type of Logic.Commands.SendKeys</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimSendKeys.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimSendKeys.#ctor(Logic.Commands.SendKeys)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimSendKeys.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimSendKeys.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSendKeys.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSendKeys.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of SendKeys.SendKeys(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSendKeys.RunTestContainer">
            <summary>Sets the shim of SendKeys.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimSendKeys.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimSendKeys.AllInstances.RunTestContainer">
            <summary>Sets the shim of SendKeys.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimTextClear">
            <summary>Shim type of Logic.Commands.TextClear</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimTextClear.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimTextClear.#ctor(Logic.Commands.TextClear)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimTextClear.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimTextClear.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimTextClear.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimTextClear.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of TextClear.TextClear(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimTextClear.RunTestContainer">
            <summary>Sets the shim of TextClear.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimTextClear.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimTextClear.AllInstances.RunTestContainer">
            <summary>Sets the shim of TextClear.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimTypeDynamicText">
            <summary>Shim type of Logic.Commands.TypeDynamicText</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimTypeDynamicText.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimTypeDynamicText.#ctor(Logic.Commands.TypeDynamicText)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimTypeDynamicText.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimTypeDynamicText.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimTypeDynamicText.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimTypeDynamicText.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of TypeDynamicText.TypeDynamicText(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimTypeDynamicText.RunTestContainer">
            <summary>Sets the shim of TypeDynamicText.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimTypeDynamicText.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimTypeDynamicText.AllInstances.RunTestContainer">
            <summary>Sets the shim of TypeDynamicText.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimTypeText">
            <summary>Shim type of Logic.Commands.TypeText</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimTypeText.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimTypeText.#ctor(Logic.Commands.TypeText)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimTypeText.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimTypeText.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimTypeText.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimTypeText.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of TypeText.TypeText(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimTypeText.RunTestContainer">
            <summary>Sets the shim of TypeText.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimTypeText.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimTypeText.AllInstances.RunTestContainer">
            <summary>Sets the shim of TypeText.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimTypeTextAndEnter">
            <summary>Shim type of Logic.Commands.TypeTextAndEnter</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimTypeTextAndEnter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimTypeTextAndEnter.#ctor(Logic.Commands.TypeTextAndEnter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimTypeTextAndEnter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimTypeTextAndEnter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimTypeTextAndEnter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimTypeTextAndEnter.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of TypeTextAndEnter.TypeTextAndEnter(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimTypeTextAndEnter.RunTestContainer">
            <summary>Sets the shim of TypeTextAndEnter.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimTypeTextAndEnter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimTypeTextAndEnter.AllInstances.RunTestContainer">
            <summary>Sets the shim of TypeTextAndEnter.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimUploadFile">
            <summary>Shim type of Logic.Commands.UploadFile</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimUploadFile.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimUploadFile.#ctor(Logic.Commands.UploadFile)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimUploadFile.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimUploadFile.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimUploadFile.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimUploadFile.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of UploadFile.UploadFile(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimUploadFile.RunTestContainer">
            <summary>Sets the shim of UploadFile.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimUploadFile.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimUploadFile.AllInstances.RunTestContainer">
            <summary>Sets the shim of UploadFile.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyAttribute">
            <summary>Shim type of Logic.Commands.VerifyAttribute</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyAttribute.#ctor(Logic.Commands.VerifyAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyAttribute.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of VerifyAttribute.VerifyAttribute(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyAttribute.RunTestContainer">
            <summary>Sets the shim of VerifyAttribute.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyAttribute.AllInstances.RunTestContainer">
            <summary>Sets the shim of VerifyAttribute.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyChecked">
            <summary>Shim type of Logic.Commands.VerifyChecked</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyChecked.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyChecked.#ctor(Logic.Commands.VerifyChecked)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyChecked.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyChecked.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyChecked.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyChecked.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of VerifyChecked.VerifyChecked(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyChecked.RunTestContainer">
            <summary>Sets the shim of VerifyChecked.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyChecked.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyChecked.AllInstances.RunTestContainer">
            <summary>Sets the shim of VerifyChecked.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyData">
            <summary>Shim type of Logic.Commands.VerifyData</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyData.#ctor(Logic.Commands.VerifyData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyData.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of VerifyData.VerifyData(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyData.RunTestContainer">
            <summary>Sets the shim of VerifyData.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyData.AllInstances.RunTestContainer">
            <summary>Sets the shim of VerifyData.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyDisabled">
            <summary>Shim type of Logic.Commands.VerifyDisabled</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyDisabled.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyDisabled.#ctor(Logic.Commands.VerifyDisabled)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyDisabled.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyDisabled.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyDisabled.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyDisabled.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of VerifyDisabled.VerifyDisabled(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyDisabled.RunTestContainer">
            <summary>Sets the shim of VerifyDisabled.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyDisabled.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyDisabled.AllInstances.RunTestContainer">
            <summary>Sets the shim of VerifyDisabled.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyElementHeight">
            <summary>Shim type of Logic.Commands.VerifyElementHeight</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyElementHeight.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyElementHeight.#ctor(Logic.Commands.VerifyElementHeight)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyElementHeight.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyElementHeight.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyElementHeight.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyElementHeight.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of VerifyElementHeight.VerifyElementHeight(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyElementHeight.RunTestContainer">
            <summary>Sets the shim of VerifyElementHeight.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyElementHeight.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyElementHeight.AllInstances.RunTestContainer">
            <summary>Sets the shim of VerifyElementHeight.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyElementNotPresent">
            <summary>Shim type of Logic.Commands.VerifyElementNotPresent</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyElementNotPresent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyElementNotPresent.#ctor(Logic.Commands.VerifyElementNotPresent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyElementNotPresent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyElementNotPresent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyElementNotPresent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyElementNotPresent.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of VerifyElementNotPresent.VerifyElementNotPresent(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyElementNotPresent.IsElementPresentTestContainerBy">
            <summary>Sets the shim of VerifyElementNotPresent.IsElementPresent(TestContainer container, By by)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyElementNotPresent.RunTestContainer">
            <summary>Sets the shim of VerifyElementNotPresent.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyElementNotPresent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyElementNotPresent.AllInstances.IsElementPresentTestContainerBy">
            <summary>Sets the shim of VerifyElementNotPresent.IsElementPresent(TestContainer container, By by)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyElementNotPresent.AllInstances.RunTestContainer">
            <summary>Sets the shim of VerifyElementNotPresent.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyElementPresent">
            <summary>Shim type of Logic.Commands.VerifyElementPresent</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyElementPresent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyElementPresent.#ctor(Logic.Commands.VerifyElementPresent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyElementPresent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyElementPresent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyElementPresent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyElementPresent.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of VerifyElementPresent.VerifyElementPresent(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyElementPresent.IsElementPresentTestContainerBy">
            <summary>Sets the shim of VerifyElementPresent.IsElementPresent(TestContainer container, By by)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyElementPresent.RunTestContainer">
            <summary>Sets the shim of VerifyElementPresent.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyElementPresent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyElementPresent.AllInstances.IsElementPresentTestContainerBy">
            <summary>Sets the shim of VerifyElementPresent.IsElementPresent(TestContainer container, By by)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyElementPresent.AllInstances.RunTestContainer">
            <summary>Sets the shim of VerifyElementPresent.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyElementWidth">
            <summary>Shim type of Logic.Commands.VerifyElementWidth</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyElementWidth.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyElementWidth.#ctor(Logic.Commands.VerifyElementWidth)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyElementWidth.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyElementWidth.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyElementWidth.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyElementWidth.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of VerifyElementWidth.VerifyElementWidth(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyElementWidth.RunTestContainer">
            <summary>Sets the shim of VerifyElementWidth.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyElementWidth.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyElementWidth.AllInstances.RunTestContainer">
            <summary>Sets the shim of VerifyElementWidth.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyEnabled">
            <summary>Shim type of Logic.Commands.VerifyEnabled</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyEnabled.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyEnabled.#ctor(Logic.Commands.VerifyEnabled)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyEnabled.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyEnabled.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyEnabled.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyEnabled.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of VerifyEnabled.VerifyEnabled(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyEnabled.RunTestContainer">
            <summary>Sets the shim of VerifyEnabled.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyEnabled.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyEnabled.AllInstances.RunTestContainer">
            <summary>Sets the shim of VerifyEnabled.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyNotChecked">
            <summary>Shim type of Logic.Commands.VerifyNotChecked</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyNotChecked.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyNotChecked.#ctor(Logic.Commands.VerifyNotChecked)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyNotChecked.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyNotChecked.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyNotChecked.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyNotChecked.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of VerifyNotChecked.VerifyNotChecked(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyNotChecked.RunTestContainer">
            <summary>Sets the shim of VerifyNotChecked.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyNotChecked.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyNotChecked.AllInstances.RunTestContainer">
            <summary>Sets the shim of VerifyNotChecked.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyNotText">
            <summary>Shim type of Logic.Commands.VerifyNotText</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyNotText.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyNotText.#ctor(Logic.Commands.VerifyNotText)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyNotText.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyNotText.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyNotText.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyNotText.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of VerifyNotText.VerifyNotText(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyNotText.RunTestContainer">
            <summary>Sets the shim of VerifyNotText.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyNotText.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyNotText.AllInstances.RunTestContainer">
            <summary>Sets the shim of VerifyNotText.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyNotVisible">
            <summary>Shim type of Logic.Commands.VerifyNotVisible</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyNotVisible.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyNotVisible.#ctor(Logic.Commands.VerifyNotVisible)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyNotVisible.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyNotVisible.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyNotVisible.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyNotVisible.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of VerifyNotVisible.VerifyNotVisible(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyNotVisible.RunTestContainer">
            <summary>Sets the shim of VerifyNotVisible.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyNotVisible.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyNotVisible.AllInstances.RunTestContainer">
            <summary>Sets the shim of VerifyNotVisible.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifySelectOptions">
            <summary>Shim type of Logic.Commands.VerifySelectOptions</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifySelectOptions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifySelectOptions.#ctor(Logic.Commands.VerifySelectOptions)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifySelectOptions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifySelectOptions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifySelectOptions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifySelectOptions.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of VerifySelectOptions.VerifySelectOptions(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifySelectOptions.RunTestContainer">
            <summary>Sets the shim of VerifySelectOptions.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifySelectOptions._Runb__0IWebElement">
            <summary>Sets the shim of VerifySelectOptions.&lt;Run&gt;b__0(IWebElement p)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifySelectOptions.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifySelectOptions.AllInstances.RunTestContainer">
            <summary>Sets the shim of VerifySelectOptions.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifySelectedLabel">
            <summary>Shim type of Logic.Commands.VerifySelectedLabel</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifySelectedLabel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifySelectedLabel.#ctor(Logic.Commands.VerifySelectedLabel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifySelectedLabel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifySelectedLabel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifySelectedLabel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifySelectedLabel.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of VerifySelectedLabel.VerifySelectedLabel(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifySelectedLabel.RunTestContainer">
            <summary>Sets the shim of VerifySelectedLabel.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifySelectedLabel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifySelectedLabel.AllInstances.RunTestContainer">
            <summary>Sets the shim of VerifySelectedLabel.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyTagNotPresent">
            <summary>Shim type of Logic.Commands.VerifyTagNotPresent</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyTagNotPresent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyTagNotPresent.#ctor(Logic.Commands.VerifyTagNotPresent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyTagNotPresent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyTagNotPresent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyTagNotPresent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyTagNotPresent.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of VerifyTagNotPresent.VerifyTagNotPresent(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyTagNotPresent.RunTestContainer">
            <summary>Sets the shim of VerifyTagNotPresent.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyTagNotPresent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyTagNotPresent.AllInstances.RunTestContainer">
            <summary>Sets the shim of VerifyTagNotPresent.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyTagPresent">
            <summary>Shim type of Logic.Commands.VerifyTagPresent</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyTagPresent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyTagPresent.#ctor(Logic.Commands.VerifyTagPresent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyTagPresent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyTagPresent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyTagPresent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyTagPresent.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of VerifyTagPresent.VerifyTagPresent(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyTagPresent.RunTestContainer">
            <summary>Sets the shim of VerifyTagPresent.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyTagPresent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyTagPresent.AllInstances.RunTestContainer">
            <summary>Sets the shim of VerifyTagPresent.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyText">
            <summary>Shim type of Logic.Commands.VerifyText</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyText.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyText.#ctor(Logic.Commands.VerifyText)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyText.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyText.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyText.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyText.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of VerifyText.VerifyText(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyText.RunTestContainer">
            <summary>Sets the shim of VerifyText.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyText.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyText.AllInstances.RunTestContainer">
            <summary>Sets the shim of VerifyText.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyTextBoxPrompt">
            <summary>Shim type of Logic.Commands.VerifyTextBoxPrompt</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyTextBoxPrompt.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyTextBoxPrompt.#ctor(Logic.Commands.VerifyTextBoxPrompt)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyTextBoxPrompt.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyTextBoxPrompt.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyTextBoxPrompt.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyTextBoxPrompt.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of VerifyTextBoxPrompt.VerifyTextBoxPrompt(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyTextBoxPrompt.RunTestContainer">
            <summary>Sets the shim of VerifyTextBoxPrompt.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyTextBoxPrompt.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyTextBoxPrompt.AllInstances.RunTestContainer">
            <summary>Sets the shim of VerifyTextBoxPrompt.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyTextBoxText">
            <summary>Shim type of Logic.Commands.VerifyTextBoxText</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyTextBoxText.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyTextBoxText.#ctor(Logic.Commands.VerifyTextBoxText)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyTextBoxText.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyTextBoxText.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyTextBoxText.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyTextBoxText.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of VerifyTextBoxText.VerifyTextBoxText(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyTextBoxText.RunTestContainer">
            <summary>Sets the shim of VerifyTextBoxText.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyTextBoxText.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyTextBoxText.AllInstances.RunTestContainer">
            <summary>Sets the shim of VerifyTextBoxText.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyTooltip">
            <summary>Shim type of Logic.Commands.VerifyTooltip</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyTooltip.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyTooltip.#ctor(Logic.Commands.VerifyTooltip)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyTooltip.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyTooltip.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyTooltip.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyTooltip.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of VerifyTooltip.VerifyTooltip(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyTooltip.IsElementPresentByTestContainer">
            <summary>Sets the shim of VerifyTooltip.IsElementPresent(By by, TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyTooltip.RunTestContainer">
            <summary>Sets the shim of VerifyTooltip.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyTooltip.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyTooltip.AllInstances.IsElementPresentByTestContainer">
            <summary>Sets the shim of VerifyTooltip.IsElementPresent(By by, TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyTooltip.AllInstances.RunTestContainer">
            <summary>Sets the shim of VerifyTooltip.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyURL">
            <summary>Shim type of Logic.Commands.VerifyURL</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyURL.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyURL.#ctor(Logic.Commands.VerifyURL)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyURL.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyURL.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyURL.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyURL.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of VerifyURL.VerifyURL(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyURL.RunTestContainer">
            <summary>Sets the shim of VerifyURL.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyURL.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyURL.AllInstances.RunTestContainer">
            <summary>Sets the shim of VerifyURL.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyVisible">
            <summary>Shim type of Logic.Commands.VerifyVisible</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyVisible.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyVisible.#ctor(Logic.Commands.VerifyVisible)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyVisible.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyVisible.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyVisible.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyVisible.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of VerifyVisible.VerifyVisible(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyVisible.RunTestContainer">
            <summary>Sets the shim of VerifyVisible.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyVisible.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyVisible.AllInstances.RunTestContainer">
            <summary>Sets the shim of VerifyVisible.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyWebTableColumnNotText">
            <summary>Shim type of Logic.Commands.VerifyWebTableColumnNotText</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyWebTableColumnNotText.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyWebTableColumnNotText.#ctor(Logic.Commands.VerifyWebTableColumnNotText)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyWebTableColumnNotText.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyWebTableColumnNotText.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyWebTableColumnNotText.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyWebTableColumnNotText.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of VerifyWebTableColumnNotText.VerifyWebTableColumnNotText(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyWebTableColumnNotText.RunTestContainer">
            <summary>Sets the shim of VerifyWebTableColumnNotText.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyWebTableColumnNotText.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyWebTableColumnNotText.AllInstances.RunTestContainer">
            <summary>Sets the shim of VerifyWebTableColumnNotText.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyWebTableColumnTagNotPresent">
            <summary>Shim type of Logic.Commands.VerifyWebTableColumnTagNotPresent</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyWebTableColumnTagNotPresent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyWebTableColumnTagNotPresent.#ctor(Logic.Commands.VerifyWebTableColumnTagNotPresent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyWebTableColumnTagNotPresent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyWebTableColumnTagNotPresent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyWebTableColumnTagNotPresent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyWebTableColumnTagNotPresent.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of VerifyWebTableColumnTagNotPresent.VerifyWebTableColumnTagNotPresent(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyWebTableColumnTagNotPresent.RunTestContainer">
            <summary>Sets the shim of VerifyWebTableColumnTagNotPresent.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyWebTableColumnTagNotPresent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyWebTableColumnTagNotPresent.AllInstances.RunTestContainer">
            <summary>Sets the shim of VerifyWebTableColumnTagNotPresent.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyWebTableColumnTagPresent">
            <summary>Shim type of Logic.Commands.VerifyWebTableColumnTagPresent</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyWebTableColumnTagPresent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyWebTableColumnTagPresent.#ctor(Logic.Commands.VerifyWebTableColumnTagPresent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyWebTableColumnTagPresent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyWebTableColumnTagPresent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyWebTableColumnTagPresent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyWebTableColumnTagPresent.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of VerifyWebTableColumnTagPresent.VerifyWebTableColumnTagPresent(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyWebTableColumnTagPresent.RunTestContainer">
            <summary>Sets the shim of VerifyWebTableColumnTagPresent.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyWebTableColumnTagPresent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyWebTableColumnTagPresent.AllInstances.RunTestContainer">
            <summary>Sets the shim of VerifyWebTableColumnTagPresent.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyWebTableColumnText">
            <summary>Shim type of Logic.Commands.VerifyWebTableColumnText</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyWebTableColumnText.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyWebTableColumnText.#ctor(Logic.Commands.VerifyWebTableColumnText)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyWebTableColumnText.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyWebTableColumnText.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyWebTableColumnText.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyWebTableColumnText.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of VerifyWebTableColumnText.VerifyWebTableColumnText(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyWebTableColumnText.RunTestContainer">
            <summary>Sets the shim of VerifyWebTableColumnText.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyWebTableColumnText.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyWebTableColumnText.AllInstances.RunTestContainer">
            <summary>Sets the shim of VerifyWebTableColumnText.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyWebTableSorting">
            <summary>Shim type of Logic.Commands.VerifyWebTableSorting</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyWebTableSorting.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyWebTableSorting.#ctor(Logic.Commands.VerifyWebTableSorting)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyWebTableSorting.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyWebTableSorting.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyWebTableSorting.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyWebTableSorting.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of VerifyWebTableSorting.VerifyWebTableSorting(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyWebTableSorting.RunTestContainer">
            <summary>Sets the shim of VerifyWebTableSorting.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyWebTableSorting._Runb__0String">
            <summary>Sets the shim of VerifyWebTableSorting.&lt;Run&gt;b__0(String p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyWebTableSorting._Runb__1String">
            <summary>Sets the shim of VerifyWebTableSorting.&lt;Run&gt;b__1(String p)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyWebTableSorting.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyWebTableSorting.AllInstances.RunTestContainer">
            <summary>Sets the shim of VerifyWebTableSorting.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyXpathCount">
            <summary>Shim type of Logic.Commands.VerifyXpathCount</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyXpathCount.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyXpathCount.#ctor(Logic.Commands.VerifyXpathCount)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyXpathCount.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVerifyXpathCount.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyXpathCount.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyXpathCount.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of VerifyXpathCount.VerifyXpathCount(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyXpathCount.RunTestContainer">
            <summary>Sets the shim of VerifyXpathCount.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVerifyXpathCount.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVerifyXpathCount.AllInstances.RunTestContainer">
            <summary>Sets the shim of VerifyXpathCount.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVirtualCommand">
            <summary>Shim type of Logic.Commands.VirtualCommand</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVirtualCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVirtualCommand.#ctor(Logic.Commands.VirtualCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVirtualCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimVirtualCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVirtualCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVirtualCommand.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeStringListOfCommand">
            <summary>Sets the shim of VirtualCommand.VirtualCommand(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters, List`1&lt;Command&gt; subCommands)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVirtualCommand.RunTestContainer">
            <summary>Sets the shim of VirtualCommand.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVirtualCommand.SubCommandsGet">
            <summary>Sets the shim of VirtualCommand.get_SubCommands()</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVirtualCommand.SubCommandsSetListOfCommand">
            <summary>Sets the shim of VirtualCommand.set_SubCommands(List`1&lt;Command&gt; value)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVirtualCommand._Runb__6Command">
            <summary>Sets the shim of VirtualCommand.&lt;Run&gt;b__6(Command c)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVirtualCommand._ctorb__0KeyValuePairOfStringTupleOfTypeString">
            <summary>Sets the shim of VirtualCommand.&lt;.ctor&gt;b__0(KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVirtualCommand._ctorb__1Command">
            <summary>Sets the shim of VirtualCommand.&lt;.ctor&gt;b__1(Command p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVirtualCommand._ctorb__2KeyValuePairOfStringTupleOfTypeString">
            <summary>Sets the shim of VirtualCommand.&lt;.ctor&gt;b__2(KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; p)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimVirtualCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVirtualCommand.AllInstances.RunTestContainer">
            <summary>Sets the shim of VirtualCommand.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVirtualCommand.AllInstances.SubCommandsGet">
            <summary>Sets the shim of VirtualCommand.get_SubCommands()</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVirtualCommand.AllInstances.SubCommandsSetListOfCommand">
            <summary>Sets the shim of VirtualCommand.set_SubCommands(List`1&lt;Command&gt; value)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVirtualCommand.AllInstances._ctorb__0KeyValuePairOfStringTupleOfTypeString">
            <summary>Sets the shim of VirtualCommand.&lt;.ctor&gt;b__0(KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; p)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimVirtualCommand.AllInstances._ctorb__2KeyValuePairOfStringTupleOfTypeString">
            <summary>Sets the shim of VirtualCommand.&lt;.ctor&gt;b__2(KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; p)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimWaitForBlockUI">
            <summary>Shim type of Logic.Commands.WaitForBlockUI</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimWaitForBlockUI.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimWaitForBlockUI.#ctor(Logic.Commands.WaitForBlockUI)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimWaitForBlockUI.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimWaitForBlockUI.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimWaitForBlockUI.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimWaitForBlockUI.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of WaitForBlockUI.WaitForBlockUI(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimWaitForBlockUI.IsElementPresentByTestContainer">
            <summary>Sets the shim of WaitForBlockUI.IsElementPresent(By by, TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimWaitForBlockUI.RunTestContainer">
            <summary>Sets the shim of WaitForBlockUI.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimWaitForBlockUI.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimWaitForBlockUI.AllInstances.IsElementPresentByTestContainer">
            <summary>Sets the shim of WaitForBlockUI.IsElementPresent(By by, TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimWaitForBlockUI.AllInstances.RunTestContainer">
            <summary>Sets the shim of WaitForBlockUI.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimWaitForElementNotPresent">
            <summary>Shim type of Logic.Commands.WaitForElementNotPresent</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimWaitForElementNotPresent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimWaitForElementNotPresent.#ctor(Logic.Commands.WaitForElementNotPresent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimWaitForElementNotPresent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimWaitForElementNotPresent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimWaitForElementNotPresent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimWaitForElementNotPresent.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of WaitForElementNotPresent.WaitForElementNotPresent(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimWaitForElementNotPresent.IsElementPresentByTestContainer">
            <summary>Sets the shim of WaitForElementNotPresent.IsElementPresent(By by, TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimWaitForElementNotPresent.RunTestContainer">
            <summary>Sets the shim of WaitForElementNotPresent.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimWaitForElementNotPresent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimWaitForElementNotPresent.AllInstances.IsElementPresentByTestContainer">
            <summary>Sets the shim of WaitForElementNotPresent.IsElementPresent(By by, TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimWaitForElementNotPresent.AllInstances.RunTestContainer">
            <summary>Sets the shim of WaitForElementNotPresent.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimWaitForElementPresent">
            <summary>Shim type of Logic.Commands.WaitForElementPresent</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimWaitForElementPresent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimWaitForElementPresent.#ctor(Logic.Commands.WaitForElementPresent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimWaitForElementPresent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimWaitForElementPresent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimWaitForElementPresent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimWaitForElementPresent.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of WaitForElementPresent.WaitForElementPresent(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimWaitForElementPresent.IsElementPresentByTestContainer">
            <summary>Sets the shim of WaitForElementPresent.IsElementPresent(By by, TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimWaitForElementPresent.RunTestContainer">
            <summary>Sets the shim of WaitForElementPresent.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimWaitForElementPresent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimWaitForElementPresent.AllInstances.IsElementPresentByTestContainer">
            <summary>Sets the shim of WaitForElementPresent.IsElementPresent(By by, TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimWaitForElementPresent.AllInstances.RunTestContainer">
            <summary>Sets the shim of WaitForElementPresent.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimWaitForVisible">
            <summary>Shim type of Logic.Commands.WaitForVisible</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimWaitForVisible.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimWaitForVisible.#ctor(Logic.Commands.WaitForVisible)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimWaitForVisible.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.ShimWaitForVisible.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimWaitForVisible.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimWaitForVisible.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of WaitForVisible.WaitForVisible(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimWaitForVisible.RunTestContainer">
            <summary>Sets the shim of WaitForVisible.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.ShimWaitForVisible.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.ShimWaitForVisible.AllInstances.RunTestContainer">
            <summary>Sets the shim of WaitForVisible.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubChangeScreenResolution">
            <summary>Stub type of Logic.Commands.ChangeScreenResolution</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubChangeScreenResolution.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubChangeScreenResolution.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubChangeScreenResolution.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubChangeScreenResolution.InitializeStub">
            <summary>Initializes a new instance of type StubChangeScreenResolution</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubChangeScreenResolution.Run(Logic.TestContainer)">
            <summary>Sets the stub of ChangeScreenResolution.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubChangeScreenResolution.RunTestContainer">
            <summary>Sets the stub of ChangeScreenResolution.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubChangeScreenResolution.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubChangeScreenResolution.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubChangeScreenResolution.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubCheck">
            <summary>Stub type of Logic.Commands.Check</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubCheck.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubCheck.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubCheck.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubCheck.InitializeStub">
            <summary>Initializes a new instance of type StubCheck</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubCheck.Run(Logic.TestContainer)">
            <summary>Sets the stub of Check.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubCheck.RunTestContainer">
            <summary>Sets the stub of Check.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubCheck.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubCheck.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubCheck.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubClick">
            <summary>Stub type of Logic.Commands.Click</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubClick.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubClick.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubClick.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubClick.InitializeStub">
            <summary>Initializes a new instance of type StubClick</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubClick.Run(Logic.TestContainer)">
            <summary>Sets the stub of Click.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubClick.RunTestContainer">
            <summary>Sets the stub of Click.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubClick.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubClick.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubClick.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubCommand">
            <summary>Stub type of Logic.Commands.Command</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubCommand.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubCommand.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubCommand.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubCommand.InitializeStub">
            <summary>Initializes a new instance of type StubCommand</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubCommand.Run(Logic.TestContainer)">
            <summary>Sets the stub of Command.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubCommand.RunTestContainer">
            <summary>Sets the stub of Command.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubCommandFactory">
            <summary>Stub type of Logic.Commands.CommandFactory</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubCommandFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubCommandFactory.InitializeStub">
            <summary>Initializes a new instance of type StubCommandFactory</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubCommandFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubCommandFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubCommandFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubExecJavascript">
            <summary>Stub type of Logic.Commands.ExecJavascript</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubExecJavascript.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubExecJavascript.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubExecJavascript.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubExecJavascript.InitializeStub">
            <summary>Initializes a new instance of type StubExecJavascript</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubExecJavascript.Run(Logic.TestContainer)">
            <summary>Sets the stub of ExecJavascript.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubExecJavascript.RunTestContainer">
            <summary>Sets the stub of ExecJavascript.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubExecJavascript.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubExecJavascript.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubExecJavascript.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubExecJavascriptFile">
            <summary>Stub type of Logic.Commands.ExecJavascriptFile</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubExecJavascriptFile.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubExecJavascriptFile.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubExecJavascriptFile.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubExecJavascriptFile.InitializeStub">
            <summary>Initializes a new instance of type StubExecJavascriptFile</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubExecJavascriptFile.Run(Logic.TestContainer)">
            <summary>Sets the stub of ExecJavascriptFile.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubExecJavascriptFile.RunTestContainer">
            <summary>Sets the stub of ExecJavascriptFile.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubExecJavascriptFile.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubExecJavascriptFile.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubExecJavascriptFile.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubGetScreenshot">
            <summary>Stub type of Logic.Commands.GetScreenshot</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubGetScreenshot.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubGetScreenshot.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubGetScreenshot.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubGetScreenshot.InitializeStub">
            <summary>Initializes a new instance of type StubGetScreenshot</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubGetScreenshot.Run(Logic.TestContainer)">
            <summary>Sets the stub of GetScreenshot.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubGetScreenshot.RunTestContainer">
            <summary>Sets the stub of GetScreenshot.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubGetScreenshot.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubGetScreenshot.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubGetScreenshot.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubGetWebTable">
            <summary>Stub type of Logic.Commands.GetWebTable</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubGetWebTable.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubGetWebTable.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubGetWebTable.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubGetWebTable.InitializeStub">
            <summary>Initializes a new instance of type StubGetWebTable</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubGetWebTable.Run(Logic.TestContainer)">
            <summary>Sets the stub of GetWebTable.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubGetWebTable.RunTestContainer">
            <summary>Sets the stub of GetWebTable.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubGetWebTable.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubGetWebTable.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubGetWebTable.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubGetXpathCount">
            <summary>Stub type of Logic.Commands.GetXpathCount</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubGetXpathCount.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubGetXpathCount.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubGetXpathCount.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubGetXpathCount.InitializeStub">
            <summary>Initializes a new instance of type StubGetXpathCount</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubGetXpathCount.Run(Logic.TestContainer)">
            <summary>Sets the stub of GetXpathCount.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubGetXpathCount.RunTestContainer">
            <summary>Sets the stub of GetXpathCount.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubGetXpathCount.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubGetXpathCount.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubGetXpathCount.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubMouseOver">
            <summary>Stub type of Logic.Commands.MouseOver</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubMouseOver.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubMouseOver.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubMouseOver.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubMouseOver.InitializeStub">
            <summary>Initializes a new instance of type StubMouseOver</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubMouseOver.Run(Logic.TestContainer)">
            <summary>Sets the stub of MouseOver.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubMouseOver.RunTestContainer">
            <summary>Sets the stub of MouseOver.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubMouseOver.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubMouseOver.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubMouseOver.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubOpenURL">
            <summary>Stub type of Logic.Commands.OpenURL</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubOpenURL.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubOpenURL.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubOpenURL.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubOpenURL.InitializeStub">
            <summary>Initializes a new instance of type StubOpenURL</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubOpenURL.Run(Logic.TestContainer)">
            <summary>Sets the stub of OpenURL.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubOpenURL.RunTestContainer">
            <summary>Sets the stub of OpenURL.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubOpenURL.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubOpenURL.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubOpenURL.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubPrintValue">
            <summary>Stub type of Logic.Commands.PrintValue</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubPrintValue.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubPrintValue.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubPrintValue.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubPrintValue.InitializeStub">
            <summary>Initializes a new instance of type StubPrintValue</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubPrintValue.Run(Logic.TestContainer)">
            <summary>Sets the stub of PrintValue.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubPrintValue.RunTestContainer">
            <summary>Sets the stub of PrintValue.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubPrintValue.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubPrintValue.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubPrintValue.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubRestfulAPI">
            <summary>Stub type of Logic.Commands.RestfulAPI</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubRestfulAPI.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubRestfulAPI.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubRestfulAPI.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubRestfulAPI.InitializeStub">
            <summary>Initializes a new instance of type StubRestfulAPI</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubRestfulAPI.Run(Logic.TestContainer)">
            <summary>Sets the stub of RestfulAPI.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubRestfulAPI.RunTestContainer">
            <summary>Sets the stub of RestfulAPI.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubRestfulAPI.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubRestfulAPI.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubRestfulAPI.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubRestfulCommand">
            <summary>Stub type of Logic.Commands.RestfulCommand</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubRestfulCommand.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubRestfulCommand.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of RestfulCommand.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubRestfulCommand.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of RestfulCommand.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubRestfulCommand.InitializeStub">
            <summary>Initializes a new instance of type StubRestfulCommand</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubRestfulCommand.Run(Logic.TestContainer)">
            <summary>Sets the stub of RestfulCommand.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubRestfulCommand.RunTestContainer">
            <summary>Sets the stub of RestfulCommand.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubRestfulCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubRestfulCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubRestfulCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubSQLExecute">
            <summary>Stub type of Logic.Commands.SQLExecute</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubSQLExecute.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}},System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubSQLExecute.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of SQLExecute.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubSQLExecute.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of SQLExecute.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubSQLExecute.InitializeStub">
            <summary>Initializes a new instance of type StubSQLExecute</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubSQLExecute.Run(Logic.TestContainer)">
            <summary>Sets the stub of SQLExecute.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubSQLExecute.RunTestContainer">
            <summary>Sets the stub of SQLExecute.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubSQLExecute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubSQLExecute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubSQLExecute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubSQLExecuteDataTable">
            <summary>Stub type of Logic.Commands.SQLExecuteDataTable</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubSQLExecuteDataTable.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}},System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubSQLExecuteDataTable.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of SQLExecute.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubSQLExecuteDataTable.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of SQLExecute.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubSQLExecuteDataTable.InitializeStub">
            <summary>Initializes a new instance of type StubSQLExecuteDataTable</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubSQLExecuteDataTable.Run(Logic.TestContainer)">
            <summary>Sets the stub of SQLExecuteDataTable.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubSQLExecuteDataTable.RunTestContainer">
            <summary>Sets the stub of SQLExecuteDataTable.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubSQLExecuteDataTable.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubSQLExecuteDataTable.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubSQLExecuteDataTable.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubSQLExecuteNonQuery">
            <summary>Stub type of Logic.Commands.SQLExecuteNonQuery</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubSQLExecuteNonQuery.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}},System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubSQLExecuteNonQuery.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of SQLExecute.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubSQLExecuteNonQuery.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of SQLExecute.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubSQLExecuteNonQuery.InitializeStub">
            <summary>Initializes a new instance of type StubSQLExecuteNonQuery</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubSQLExecuteNonQuery.Run(Logic.TestContainer)">
            <summary>Sets the stub of SQLExecuteNonQuery.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubSQLExecuteNonQuery.RunTestContainer">
            <summary>Sets the stub of SQLExecuteNonQuery.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubSQLExecuteNonQuery.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubSQLExecuteNonQuery.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubSQLExecuteNonQuery.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubSQLExecuteScalar">
            <summary>Stub type of Logic.Commands.SQLExecuteScalar</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubSQLExecuteScalar.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}},System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubSQLExecuteScalar.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of SQLExecute.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubSQLExecuteScalar.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of SQLExecute.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubSQLExecuteScalar.InitializeStub">
            <summary>Initializes a new instance of type StubSQLExecuteScalar</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubSQLExecuteScalar.Run(Logic.TestContainer)">
            <summary>Sets the stub of SQLExecuteScalar.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubSQLExecuteScalar.RunTestContainer">
            <summary>Sets the stub of SQLExecuteScalar.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubSQLExecuteScalar.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubSQLExecuteScalar.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubSQLExecuteScalar.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubSelect">
            <summary>Stub type of Logic.Commands.Select</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubSelect.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubSelect.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubSelect.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubSelect.InitializeStub">
            <summary>Initializes a new instance of type StubSelect</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubSelect.Run(Logic.TestContainer)">
            <summary>Sets the stub of Select.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubSelect.RunTestContainer">
            <summary>Sets the stub of Select.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubSelect.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubSelect.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubSelect.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubSelectCalendarDate">
            <summary>Stub type of Logic.Commands.SelectCalendarDate</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubSelectCalendarDate.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubSelectCalendarDate.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubSelectCalendarDate.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubSelectCalendarDate.InitializeStub">
            <summary>Initializes a new instance of type StubSelectCalendarDate</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubSelectCalendarDate.Run(Logic.TestContainer)">
            <summary>Sets the stub of SelectCalendarDate.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubSelectCalendarDate.RunTestContainer">
            <summary>Sets the stub of SelectCalendarDate.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubSelectCalendarDate.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubSelectCalendarDate.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubSelectCalendarDate.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubSendKeys">
            <summary>Stub type of Logic.Commands.SendKeys</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubSendKeys.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubSendKeys.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubSendKeys.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubSendKeys.InitializeStub">
            <summary>Initializes a new instance of type StubSendKeys</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubSendKeys.Run(Logic.TestContainer)">
            <summary>Sets the stub of SendKeys.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubSendKeys.RunTestContainer">
            <summary>Sets the stub of SendKeys.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubSendKeys.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubSendKeys.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubSendKeys.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubTextClear">
            <summary>Stub type of Logic.Commands.TextClear</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubTextClear.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubTextClear.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubTextClear.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubTextClear.InitializeStub">
            <summary>Initializes a new instance of type StubTextClear</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubTextClear.Run(Logic.TestContainer)">
            <summary>Sets the stub of TextClear.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubTextClear.RunTestContainer">
            <summary>Sets the stub of TextClear.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubTextClear.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubTextClear.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubTextClear.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubTypeDynamicText">
            <summary>Stub type of Logic.Commands.TypeDynamicText</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubTypeDynamicText.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubTypeDynamicText.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubTypeDynamicText.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubTypeDynamicText.InitializeStub">
            <summary>Initializes a new instance of type StubTypeDynamicText</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubTypeDynamicText.Run(Logic.TestContainer)">
            <summary>Sets the stub of TypeDynamicText.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubTypeDynamicText.RunTestContainer">
            <summary>Sets the stub of TypeDynamicText.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubTypeDynamicText.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubTypeDynamicText.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubTypeDynamicText.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubTypeText">
            <summary>Stub type of Logic.Commands.TypeText</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubTypeText.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubTypeText.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubTypeText.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubTypeText.InitializeStub">
            <summary>Initializes a new instance of type StubTypeText</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubTypeText.Run(Logic.TestContainer)">
            <summary>Sets the stub of TypeText.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubTypeText.RunTestContainer">
            <summary>Sets the stub of TypeText.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubTypeText.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubTypeText.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubTypeText.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubTypeTextAndEnter">
            <summary>Stub type of Logic.Commands.TypeTextAndEnter</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubTypeTextAndEnter.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubTypeTextAndEnter.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubTypeTextAndEnter.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubTypeTextAndEnter.InitializeStub">
            <summary>Initializes a new instance of type StubTypeTextAndEnter</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubTypeTextAndEnter.Run(Logic.TestContainer)">
            <summary>Sets the stub of TypeTextAndEnter.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubTypeTextAndEnter.RunTestContainer">
            <summary>Sets the stub of TypeTextAndEnter.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubTypeTextAndEnter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubTypeTextAndEnter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubTypeTextAndEnter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubUploadFile">
            <summary>Stub type of Logic.Commands.UploadFile</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubUploadFile.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubUploadFile.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubUploadFile.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubUploadFile.InitializeStub">
            <summary>Initializes a new instance of type StubUploadFile</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubUploadFile.Run(Logic.TestContainer)">
            <summary>Sets the stub of UploadFile.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubUploadFile.RunTestContainer">
            <summary>Sets the stub of UploadFile.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubUploadFile.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubUploadFile.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubUploadFile.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubVerifyAttribute">
            <summary>Stub type of Logic.Commands.VerifyAttribute</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyAttribute.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyAttribute.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyAttribute.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubVerifyAttribute</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyAttribute.Run(Logic.TestContainer)">
            <summary>Sets the stub of VerifyAttribute.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyAttribute.RunTestContainer">
            <summary>Sets the stub of VerifyAttribute.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubVerifyChecked">
            <summary>Stub type of Logic.Commands.VerifyChecked</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyChecked.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyChecked.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyChecked.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyChecked.InitializeStub">
            <summary>Initializes a new instance of type StubVerifyChecked</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyChecked.Run(Logic.TestContainer)">
            <summary>Sets the stub of VerifyChecked.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyChecked.RunTestContainer">
            <summary>Sets the stub of VerifyChecked.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyChecked.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyChecked.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyChecked.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubVerifyData">
            <summary>Stub type of Logic.Commands.VerifyData</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyData.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyData.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyData.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyData.InitializeStub">
            <summary>Initializes a new instance of type StubVerifyData</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyData.Run(Logic.TestContainer)">
            <summary>Sets the stub of VerifyData.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyData.RunTestContainer">
            <summary>Sets the stub of VerifyData.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubVerifyDisabled">
            <summary>Stub type of Logic.Commands.VerifyDisabled</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyDisabled.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyDisabled.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyDisabled.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyDisabled.InitializeStub">
            <summary>Initializes a new instance of type StubVerifyDisabled</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyDisabled.Run(Logic.TestContainer)">
            <summary>Sets the stub of VerifyDisabled.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyDisabled.RunTestContainer">
            <summary>Sets the stub of VerifyDisabled.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyDisabled.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyDisabled.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyDisabled.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubVerifyElementHeight">
            <summary>Stub type of Logic.Commands.VerifyElementHeight</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyElementHeight.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyElementHeight.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyElementHeight.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyElementHeight.InitializeStub">
            <summary>Initializes a new instance of type StubVerifyElementHeight</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyElementHeight.Run(Logic.TestContainer)">
            <summary>Sets the stub of VerifyElementHeight.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyElementHeight.RunTestContainer">
            <summary>Sets the stub of VerifyElementHeight.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyElementHeight.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyElementHeight.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyElementHeight.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubVerifyElementNotPresent">
            <summary>Stub type of Logic.Commands.VerifyElementNotPresent</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyElementNotPresent.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyElementNotPresent.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyElementNotPresent.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyElementNotPresent.InitializeStub">
            <summary>Initializes a new instance of type StubVerifyElementNotPresent</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyElementNotPresent.Run(Logic.TestContainer)">
            <summary>Sets the stub of VerifyElementNotPresent.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyElementNotPresent.RunTestContainer">
            <summary>Sets the stub of VerifyElementNotPresent.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyElementNotPresent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyElementNotPresent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyElementNotPresent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubVerifyElementPresent">
            <summary>Stub type of Logic.Commands.VerifyElementPresent</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyElementPresent.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyElementPresent.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyElementPresent.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyElementPresent.InitializeStub">
            <summary>Initializes a new instance of type StubVerifyElementPresent</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyElementPresent.Run(Logic.TestContainer)">
            <summary>Sets the stub of VerifyElementPresent.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyElementPresent.RunTestContainer">
            <summary>Sets the stub of VerifyElementPresent.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyElementPresent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyElementPresent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyElementPresent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubVerifyElementWidth">
            <summary>Stub type of Logic.Commands.VerifyElementWidth</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyElementWidth.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyElementWidth.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyElementWidth.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyElementWidth.InitializeStub">
            <summary>Initializes a new instance of type StubVerifyElementWidth</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyElementWidth.Run(Logic.TestContainer)">
            <summary>Sets the stub of VerifyElementWidth.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyElementWidth.RunTestContainer">
            <summary>Sets the stub of VerifyElementWidth.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyElementWidth.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyElementWidth.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyElementWidth.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubVerifyEnabled">
            <summary>Stub type of Logic.Commands.VerifyEnabled</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyEnabled.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyEnabled.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyEnabled.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyEnabled.InitializeStub">
            <summary>Initializes a new instance of type StubVerifyEnabled</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyEnabled.Run(Logic.TestContainer)">
            <summary>Sets the stub of VerifyEnabled.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyEnabled.RunTestContainer">
            <summary>Sets the stub of VerifyEnabled.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyEnabled.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyEnabled.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyEnabled.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubVerifyNotChecked">
            <summary>Stub type of Logic.Commands.VerifyNotChecked</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyNotChecked.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyNotChecked.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyNotChecked.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyNotChecked.InitializeStub">
            <summary>Initializes a new instance of type StubVerifyNotChecked</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyNotChecked.Run(Logic.TestContainer)">
            <summary>Sets the stub of VerifyNotChecked.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyNotChecked.RunTestContainer">
            <summary>Sets the stub of VerifyNotChecked.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyNotChecked.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyNotChecked.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyNotChecked.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubVerifyNotText">
            <summary>Stub type of Logic.Commands.VerifyNotText</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyNotText.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyNotText.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyNotText.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyNotText.InitializeStub">
            <summary>Initializes a new instance of type StubVerifyNotText</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyNotText.Run(Logic.TestContainer)">
            <summary>Sets the stub of VerifyNotText.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyNotText.RunTestContainer">
            <summary>Sets the stub of VerifyNotText.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyNotText.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyNotText.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyNotText.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubVerifyNotVisible">
            <summary>Stub type of Logic.Commands.VerifyNotVisible</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyNotVisible.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyNotVisible.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyNotVisible.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyNotVisible.InitializeStub">
            <summary>Initializes a new instance of type StubVerifyNotVisible</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyNotVisible.Run(Logic.TestContainer)">
            <summary>Sets the stub of VerifyNotVisible.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyNotVisible.RunTestContainer">
            <summary>Sets the stub of VerifyNotVisible.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyNotVisible.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyNotVisible.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyNotVisible.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubVerifySelectOptions">
            <summary>Stub type of Logic.Commands.VerifySelectOptions</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifySelectOptions.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifySelectOptions.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifySelectOptions.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifySelectOptions.InitializeStub">
            <summary>Initializes a new instance of type StubVerifySelectOptions</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifySelectOptions.Run(Logic.TestContainer)">
            <summary>Sets the stub of VerifySelectOptions.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifySelectOptions.RunTestContainer">
            <summary>Sets the stub of VerifySelectOptions.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifySelectOptions.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifySelectOptions.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifySelectOptions.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubVerifySelectedLabel">
            <summary>Stub type of Logic.Commands.VerifySelectedLabel</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifySelectedLabel.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifySelectedLabel.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifySelectedLabel.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifySelectedLabel.InitializeStub">
            <summary>Initializes a new instance of type StubVerifySelectedLabel</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifySelectedLabel.Run(Logic.TestContainer)">
            <summary>Sets the stub of VerifySelectedLabel.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifySelectedLabel.RunTestContainer">
            <summary>Sets the stub of VerifySelectedLabel.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifySelectedLabel.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifySelectedLabel.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifySelectedLabel.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubVerifyTagNotPresent">
            <summary>Stub type of Logic.Commands.VerifyTagNotPresent</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyTagNotPresent.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyTagNotPresent.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyTagNotPresent.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyTagNotPresent.InitializeStub">
            <summary>Initializes a new instance of type StubVerifyTagNotPresent</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyTagNotPresent.Run(Logic.TestContainer)">
            <summary>Sets the stub of VerifyTagNotPresent.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyTagNotPresent.RunTestContainer">
            <summary>Sets the stub of VerifyTagNotPresent.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyTagNotPresent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyTagNotPresent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyTagNotPresent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubVerifyTagPresent">
            <summary>Stub type of Logic.Commands.VerifyTagPresent</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyTagPresent.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyTagPresent.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyTagPresent.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyTagPresent.InitializeStub">
            <summary>Initializes a new instance of type StubVerifyTagPresent</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyTagPresent.Run(Logic.TestContainer)">
            <summary>Sets the stub of VerifyTagPresent.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyTagPresent.RunTestContainer">
            <summary>Sets the stub of VerifyTagPresent.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyTagPresent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyTagPresent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyTagPresent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubVerifyText">
            <summary>Stub type of Logic.Commands.VerifyText</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyText.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyText.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyText.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyText.InitializeStub">
            <summary>Initializes a new instance of type StubVerifyText</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyText.Run(Logic.TestContainer)">
            <summary>Sets the stub of VerifyText.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyText.RunTestContainer">
            <summary>Sets the stub of VerifyText.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyText.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyText.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyText.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubVerifyTextBoxPrompt">
            <summary>Stub type of Logic.Commands.VerifyTextBoxPrompt</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyTextBoxPrompt.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyTextBoxPrompt.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyTextBoxPrompt.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyTextBoxPrompt.InitializeStub">
            <summary>Initializes a new instance of type StubVerifyTextBoxPrompt</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyTextBoxPrompt.Run(Logic.TestContainer)">
            <summary>Sets the stub of VerifyTextBoxPrompt.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyTextBoxPrompt.RunTestContainer">
            <summary>Sets the stub of VerifyTextBoxPrompt.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyTextBoxPrompt.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyTextBoxPrompt.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyTextBoxPrompt.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubVerifyTextBoxText">
            <summary>Stub type of Logic.Commands.VerifyTextBoxText</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyTextBoxText.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyTextBoxText.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyTextBoxText.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyTextBoxText.InitializeStub">
            <summary>Initializes a new instance of type StubVerifyTextBoxText</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyTextBoxText.Run(Logic.TestContainer)">
            <summary>Sets the stub of VerifyTextBoxText.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyTextBoxText.RunTestContainer">
            <summary>Sets the stub of VerifyTextBoxText.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyTextBoxText.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyTextBoxText.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyTextBoxText.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubVerifyTooltip">
            <summary>Stub type of Logic.Commands.VerifyTooltip</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyTooltip.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyTooltip.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyTooltip.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyTooltip.InitializeStub">
            <summary>Initializes a new instance of type StubVerifyTooltip</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyTooltip.Run(Logic.TestContainer)">
            <summary>Sets the stub of VerifyTooltip.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyTooltip.RunTestContainer">
            <summary>Sets the stub of VerifyTooltip.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyTooltip.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyTooltip.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyTooltip.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubVerifyURL">
            <summary>Stub type of Logic.Commands.VerifyURL</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyURL.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyURL.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyURL.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyURL.InitializeStub">
            <summary>Initializes a new instance of type StubVerifyURL</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyURL.Run(Logic.TestContainer)">
            <summary>Sets the stub of VerifyURL.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyURL.RunTestContainer">
            <summary>Sets the stub of VerifyURL.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyURL.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyURL.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyURL.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubVerifyVisible">
            <summary>Stub type of Logic.Commands.VerifyVisible</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyVisible.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyVisible.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyVisible.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyVisible.InitializeStub">
            <summary>Initializes a new instance of type StubVerifyVisible</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyVisible.Run(Logic.TestContainer)">
            <summary>Sets the stub of VerifyVisible.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyVisible.RunTestContainer">
            <summary>Sets the stub of VerifyVisible.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyVisible.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyVisible.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyVisible.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubVerifyWebTableColumnNotText">
            <summary>Stub type of Logic.Commands.VerifyWebTableColumnNotText</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyWebTableColumnNotText.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyWebTableColumnNotText.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyWebTableColumnNotText.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyWebTableColumnNotText.InitializeStub">
            <summary>Initializes a new instance of type StubVerifyWebTableColumnNotText</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyWebTableColumnNotText.Run(Logic.TestContainer)">
            <summary>Sets the stub of VerifyWebTableColumnNotText.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyWebTableColumnNotText.RunTestContainer">
            <summary>Sets the stub of VerifyWebTableColumnNotText.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyWebTableColumnNotText.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyWebTableColumnNotText.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyWebTableColumnNotText.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubVerifyWebTableColumnTagNotPresent">
            <summary>Stub type of Logic.Commands.VerifyWebTableColumnTagNotPresent</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyWebTableColumnTagNotPresent.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyWebTableColumnTagNotPresent.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyWebTableColumnTagNotPresent.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyWebTableColumnTagNotPresent.InitializeStub">
            <summary>Initializes a new instance of type StubVerifyWebTableColumnTagNotPresent</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyWebTableColumnTagNotPresent.Run(Logic.TestContainer)">
            <summary>Sets the stub of VerifyWebTableColumnTagNotPresent.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyWebTableColumnTagNotPresent.RunTestContainer">
            <summary>Sets the stub of VerifyWebTableColumnTagNotPresent.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyWebTableColumnTagNotPresent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyWebTableColumnTagNotPresent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyWebTableColumnTagNotPresent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubVerifyWebTableColumnTagPresent">
            <summary>Stub type of Logic.Commands.VerifyWebTableColumnTagPresent</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyWebTableColumnTagPresent.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyWebTableColumnTagPresent.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyWebTableColumnTagPresent.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyWebTableColumnTagPresent.InitializeStub">
            <summary>Initializes a new instance of type StubVerifyWebTableColumnTagPresent</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyWebTableColumnTagPresent.Run(Logic.TestContainer)">
            <summary>Sets the stub of VerifyWebTableColumnTagPresent.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyWebTableColumnTagPresent.RunTestContainer">
            <summary>Sets the stub of VerifyWebTableColumnTagPresent.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyWebTableColumnTagPresent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyWebTableColumnTagPresent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyWebTableColumnTagPresent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubVerifyWebTableColumnText">
            <summary>Stub type of Logic.Commands.VerifyWebTableColumnText</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyWebTableColumnText.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyWebTableColumnText.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyWebTableColumnText.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyWebTableColumnText.InitializeStub">
            <summary>Initializes a new instance of type StubVerifyWebTableColumnText</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyWebTableColumnText.Run(Logic.TestContainer)">
            <summary>Sets the stub of VerifyWebTableColumnText.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyWebTableColumnText.RunTestContainer">
            <summary>Sets the stub of VerifyWebTableColumnText.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyWebTableColumnText.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyWebTableColumnText.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyWebTableColumnText.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubVerifyWebTableSorting">
            <summary>Stub type of Logic.Commands.VerifyWebTableSorting</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyWebTableSorting.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyWebTableSorting.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyWebTableSorting.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyWebTableSorting.InitializeStub">
            <summary>Initializes a new instance of type StubVerifyWebTableSorting</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyWebTableSorting.Run(Logic.TestContainer)">
            <summary>Sets the stub of VerifyWebTableSorting.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyWebTableSorting.RunTestContainer">
            <summary>Sets the stub of VerifyWebTableSorting.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyWebTableSorting.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyWebTableSorting.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyWebTableSorting.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubVerifyXpathCount">
            <summary>Stub type of Logic.Commands.VerifyXpathCount</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyXpathCount.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyXpathCount.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyXpathCount.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyXpathCount.InitializeStub">
            <summary>Initializes a new instance of type StubVerifyXpathCount</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVerifyXpathCount.Run(Logic.TestContainer)">
            <summary>Sets the stub of VerifyXpathCount.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVerifyXpathCount.RunTestContainer">
            <summary>Sets the stub of VerifyXpathCount.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyXpathCount.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyXpathCount.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVerifyXpathCount.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubVirtualCommand">
            <summary>Stub type of Logic.Commands.VirtualCommand</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVirtualCommand.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.List{Logic.Commands.Command})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVirtualCommand.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVirtualCommand.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVirtualCommand.InitializeStub">
            <summary>Initializes a new instance of type StubVirtualCommand</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubVirtualCommand.Run(Logic.TestContainer)">
            <summary>Sets the stub of VirtualCommand.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubVirtualCommand.RunTestContainer">
            <summary>Sets the stub of VirtualCommand.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVirtualCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVirtualCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubVirtualCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubWaitForBlockUI">
            <summary>Stub type of Logic.Commands.WaitForBlockUI</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubWaitForBlockUI.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubWaitForBlockUI.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubWaitForBlockUI.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubWaitForBlockUI.InitializeStub">
            <summary>Initializes a new instance of type StubWaitForBlockUI</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubWaitForBlockUI.Run(Logic.TestContainer)">
            <summary>Sets the stub of WaitForBlockUI.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubWaitForBlockUI.RunTestContainer">
            <summary>Sets the stub of WaitForBlockUI.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubWaitForBlockUI.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubWaitForBlockUI.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubWaitForBlockUI.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubWaitForElementNotPresent">
            <summary>Stub type of Logic.Commands.WaitForElementNotPresent</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubWaitForElementNotPresent.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubWaitForElementNotPresent.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubWaitForElementNotPresent.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubWaitForElementNotPresent.InitializeStub">
            <summary>Initializes a new instance of type StubWaitForElementNotPresent</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubWaitForElementNotPresent.Run(Logic.TestContainer)">
            <summary>Sets the stub of WaitForElementNotPresent.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubWaitForElementNotPresent.RunTestContainer">
            <summary>Sets the stub of WaitForElementNotPresent.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubWaitForElementNotPresent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubWaitForElementNotPresent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubWaitForElementNotPresent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubWaitForElementPresent">
            <summary>Stub type of Logic.Commands.WaitForElementPresent</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubWaitForElementPresent.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubWaitForElementPresent.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubWaitForElementPresent.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubWaitForElementPresent.InitializeStub">
            <summary>Initializes a new instance of type StubWaitForElementPresent</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubWaitForElementPresent.Run(Logic.TestContainer)">
            <summary>Sets the stub of WaitForElementPresent.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubWaitForElementPresent.RunTestContainer">
            <summary>Sets the stub of WaitForElementPresent.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubWaitForElementPresent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubWaitForElementPresent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubWaitForElementPresent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.Fakes.StubWaitForVisible">
            <summary>Stub type of Logic.Commands.WaitForVisible</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubWaitForVisible.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubWaitForVisible.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubWaitForVisible.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubWaitForVisible.InitializeStub">
            <summary>Initializes a new instance of type StubWaitForVisible</summary>
        </member>
        <member name="M:Logic.Commands.Fakes.StubWaitForVisible.Run(Logic.TestContainer)">
            <summary>Sets the stub of WaitForVisible.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.Fakes.StubWaitForVisible.RunTestContainer">
            <summary>Sets the stub of WaitForVisible.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubWaitForVisible.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubWaitForVisible.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.Fakes.StubWaitForVisible.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.UI.Fakes.ShimUICommandHelper">
            <summary>Shim type of Logic.Commands.UI.UICommandHelper</summary>
        </member>
        <member name="M:Logic.Commands.UI.Fakes.ShimUICommandHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.UI.Fakes.ShimUICommandHelper.#ctor(Logic.Commands.UI.UICommandHelper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.UI.Fakes.ShimUICommandHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.UI.Fakes.ShimUICommandHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.UI.Fakes.ShimUICommandHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.UI.Fakes.ShimUICommandHelper.Constructor">
            <summary>Sets the shim of UICommandHelper.UICommandHelper()</summary>
        </member>
        <member name="P:Logic.Commands.UI.Fakes.ShimUICommandHelper.ExtractMethodNameStringStringOutStringOut">
            <summary>Sets the shim of UICommandHelper.ExtractMethodName(String tarString, String&amp; methodName, String&amp; target)</summary>
        </member>
        <member name="P:Logic.Commands.UI.Fakes.ShimUICommandHelper.locatorTypeGet">
            <summary>Sets the shim of UICommandHelper.get_locatorType()</summary>
        </member>
        <member name="P:Logic.Commands.UI.Fakes.ShimUICommandHelper.locatorTypeSetString">
            <summary>Sets the shim of UICommandHelper.set_locatorType(String value)</summary>
        </member>
        <member name="T:Logic.Commands.UI.Fakes.ShimUICommandHelper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.UI.Fakes.ShimUICommandHelper.AllInstances.ExtractMethodNameStringStringOutStringOut">
            <summary>Sets the shim of UICommandHelper.ExtractMethodName(String tarString, String&amp; methodName, String&amp; target)</summary>
        </member>
        <member name="P:Logic.Commands.UI.Fakes.ShimUICommandHelper.AllInstances.locatorTypeGet">
            <summary>Sets the shim of UICommandHelper.get_locatorType()</summary>
        </member>
        <member name="P:Logic.Commands.UI.Fakes.ShimUICommandHelper.AllInstances.locatorTypeSetString">
            <summary>Sets the shim of UICommandHelper.set_locatorType(String value)</summary>
        </member>
        <member name="T:Logic.Commands.UI.Fakes.StubUICommandHelper">
            <summary>Stub type of Logic.Commands.UI.UICommandHelper</summary>
        </member>
        <member name="M:Logic.Commands.UI.Fakes.StubUICommandHelper.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.UI.Fakes.StubUICommandHelper.InitializeStub">
            <summary>Initializes a new instance of type StubUICommandHelper</summary>
        </member>
        <member name="P:Logic.Commands.UI.Fakes.StubUICommandHelper.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.UI.Fakes.StubUICommandHelper.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.UI.Fakes.StubUICommandHelper.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Commands.UI.Operation.Fakes.ShimGetCookie">
            <summary>Shim type of Logic.Commands.UI.Operation.GetCookie</summary>
        </member>
        <member name="M:Logic.Commands.UI.Operation.Fakes.ShimGetCookie.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Commands.UI.Operation.Fakes.ShimGetCookie.#ctor(Logic.Commands.UI.Operation.GetCookie)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Commands.UI.Operation.Fakes.ShimGetCookie.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Commands.UI.Operation.Fakes.ShimGetCookie.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.UI.Operation.Fakes.ShimGetCookie.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Commands.UI.Operation.Fakes.ShimGetCookie.ConstructorStringStringKeyValuePairOfStringTupleOfTypeStringDictionaryOfStringTupleOfTypeString">
            <summary>Sets the shim of GetCookie.GetCookie(String id, String description, KeyValuePair`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; output, Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Commands.UI.Operation.Fakes.ShimGetCookie.RunTestContainer">
            <summary>Sets the shim of GetCookie.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.UI.Operation.Fakes.ShimGetCookie.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Commands.UI.Operation.Fakes.ShimGetCookie.AllInstances.RunTestContainer">
            <summary>Sets the shim of GetCookie.Run(TestContainer container)</summary>
        </member>
        <member name="T:Logic.Commands.UI.Operation.Fakes.StubGetCookie">
            <summary>Stub type of Logic.Commands.UI.Operation.GetCookie</summary>
        </member>
        <member name="M:Logic.Commands.UI.Operation.Fakes.StubGetCookie.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Type,System.String}},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Commands.UI.Operation.Fakes.StubGetCookie.ApplyParameters(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Type,System.String}})">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="F:Logic.Commands.UI.Operation.Fakes.StubGetCookie.ApplyParametersDictionaryOfStringTupleOfTypeString">
            <summary>Sets the stub of Command.ApplyParameters(Dictionary`2&lt;String,Tuple`2&lt;Type,String&gt;&gt; parameters)</summary>
        </member>
        <member name="M:Logic.Commands.UI.Operation.Fakes.StubGetCookie.InitializeStub">
            <summary>Initializes a new instance of type StubGetCookie</summary>
        </member>
        <member name="M:Logic.Commands.UI.Operation.Fakes.StubGetCookie.Run(Logic.TestContainer)">
            <summary>Sets the stub of GetCookie.Run(TestContainer container)</summary>
        </member>
        <member name="F:Logic.Commands.UI.Operation.Fakes.StubGetCookie.RunTestContainer">
            <summary>Sets the stub of GetCookie.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Commands.UI.Operation.Fakes.StubGetCookie.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Commands.UI.Operation.Fakes.StubGetCookie.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Commands.UI.Operation.Fakes.StubGetCookie.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Fakes.ShimConsoleReportPrint">
            <summary>Shim type of Logic.ConsoleReportPrint</summary>
        </member>
        <member name="M:Logic.Fakes.ShimConsoleReportPrint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Fakes.ShimConsoleReportPrint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Fakes.ShimConsoleReportPrint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Fakes.ShimConsoleReportPrint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Fakes.ShimConsoleReportPrint.CaseCommandPrintStringStringBooleanBoolean">
            <summary>Sets the shim of ConsoleReportPrint.CaseCommandPrint(String cmdId, String cmdDescription, Boolean isSkip, Boolean result)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimConsoleReportPrint.TestCaseCompletePrintStringBoolean">
            <summary>Sets the shim of ConsoleReportPrint.TestCaseCompletePrint(String id, Boolean result)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimConsoleReportPrint.TestCaseStartPrintStringString">
            <summary>Sets the shim of ConsoleReportPrint.TestCaseStartPrint(String id, String description)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimConsoleReportPrint.VirtualCommandDetailPrintStringStringBooleanBoolean">
            <summary>Sets the shim of ConsoleReportPrint.VirtualCommandDetailPrint(String cmdId, String cmdDescription, Boolean isSkip, Boolean result)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimConsoleReportPrint.VirtualCommandPrintStringString">
            <summary>Sets the shim of ConsoleReportPrint.VirtualCommandPrint(String cmdId, String description)</summary>
        </member>
        <member name="T:Logic.Fakes.ShimHelper">
            <summary>Shim type of Logic.Helper</summary>
        </member>
        <member name="M:Logic.Fakes.ShimHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Fakes.ShimHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Fakes.ShimHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Fakes.ShimHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Fakes.ShimHelper.CreateCommandTypeDictionaryOfStringObject">
            <summary>Sets the shim of Helper.CreateCommand(Type commandType, Dictionary`2&lt;String,Object&gt; parameters)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimHelper.CreateIdFilterPredicateIListOfString">
            <summary>Sets the shim of Helper.CreateIdFilterPredicate(IList`1&lt;String&gt; idSearchPattern)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimHelper.CreateTagFilterPredicateIListOfString">
            <summary>Sets the shim of Helper.CreateTagFilterPredicate(IList`1&lt;String&gt; tagSearchPattern)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimHelper.GetDefaultValueType">
            <summary>Sets the shim of Helper.GetDefaultValue(Type t)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimHelper.SerializeToJSonDataTable">
            <summary>Sets the shim of Helper.SerializeToJSon(DataTable dt)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimHelper.StaticConstructor">
            <summary>Sets the shim of Helper.Helper()</summary>
        </member>
        <member name="P:Logic.Fakes.ShimHelper._CreateIdFilterPredicateb__aXAttribute">
            <summary>Sets the shim of Helper.&lt;CreateIdFilterPredicate&gt;b__a(XAttribute idAttr)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimHelper._CreateIdFilterPredicateb__bString">
            <summary>Sets the shim of Helper.&lt;CreateIdFilterPredicate&gt;b__b(String p)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimHelper._CreateIdFilterPredicateb__cString">
            <summary>Sets the shim of Helper.&lt;CreateIdFilterPredicate&gt;b__c(String p)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimHelper._CreateIdFilterPredicateb__dXAttribute">
            <summary>Sets the shim of Helper.&lt;CreateIdFilterPredicate&gt;b__d(XAttribute idAttr)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimHelper._CreateTagFilterPredicateb__19XAttribute">
            <summary>Sets the shim of Helper.&lt;CreateTagFilterPredicate&gt;b__19(XAttribute tagAttr)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimHelper._CreateTagFilterPredicateb__1aString">
            <summary>Sets the shim of Helper.&lt;CreateTagFilterPredicate&gt;b__1a(String p)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimHelper._CreateTagFilterPredicateb__1bString">
            <summary>Sets the shim of Helper.&lt;CreateTagFilterPredicate&gt;b__1b(String p)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimHelper._CreateTagFilterPredicateb__1cXAttribute">
            <summary>Sets the shim of Helper.&lt;CreateTagFilterPredicate&gt;b__1c(XAttribute tagAttr)</summary>
        </member>
        <member name="T:Logic.Fakes.ShimLogging">
            <summary>Shim type of Logic.Logging</summary>
        </member>
        <member name="M:Logic.Fakes.ShimLogging.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Fakes.ShimLogging.#ctor(Logic.Logging)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Fakes.ShimLogging.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Fakes.ShimLogging.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Fakes.ShimLogging.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Fakes.ShimLogging.Constructor">
            <summary>Sets the shim of Logging.Logging()</summary>
        </member>
        <member name="P:Logic.Fakes.ShimLogging.ExportLogELogTypeString">
            <summary>Sets the shim of Logging.ExportLog(ELogType LogType, String Message)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimLogging.LoadLogString">
            <summary>Sets the shim of Logging.LoadLog(String filePath)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimLogging.SaveLogExceptionELogType">
            <summary>Sets the shim of Logging.SaveLog(Exception exp, ELogType LogType)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimLogging.SaveLogStringELogType">
            <summary>Sets the shim of Logging.SaveLog(String Message, ELogType LogType)</summary>
        </member>
        <member name="T:Logic.Fakes.ShimLogging.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Logic.Fakes.ShimTestCase">
            <summary>Shim type of Logic.TestCase</summary>
        </member>
        <member name="M:Logic.Fakes.ShimTestCase.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Fakes.ShimTestCase.#ctor(Logic.TestCase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Fakes.ShimTestCase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Fakes.ShimTestCase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestCase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestCase.CommandsGet">
            <summary>Sets the shim of TestCase.get_Commands()</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestCase.CommandsSetReadOnlyCollectionOfCommand">
            <summary>Sets the shim of TestCase.set_Commands(ReadOnlyCollection`1&lt;Command&gt; value)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestCase.ConstructorStringStringStringArrayListOfCommand">
            <summary>Sets the shim of TestCase.TestCase(String id, String description, String[] tag, List`1&lt;Command&gt; commands)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestCase.DescriptionGet">
            <summary>Sets the shim of TestCase.get_Description()</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestCase.DescriptionSetString">
            <summary>Sets the shim of TestCase.set_Description(String value)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestCase.IdGet">
            <summary>Sets the shim of TestCase.get_Id()</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestCase.IdSetString">
            <summary>Sets the shim of TestCase.set_Id(String value)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestCase.PassTestGet">
            <summary>Sets the shim of TestCase.get_PassTest()</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestCase.PassTestSetBoolean">
            <summary>Sets the shim of TestCase.set_PassTest(Boolean value)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestCase.RunTestContainer">
            <summary>Sets the shim of TestCase.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestCase.TagGet">
            <summary>Sets the shim of TestCase.get_Tag()</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestCase.TagSetStringArray">
            <summary>Sets the shim of TestCase.set_Tag(String[] value)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestCase._Runb__4Command">
            <summary>Sets the shim of TestCase.&lt;Run&gt;b__4(Command c)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestCase._ctorb__0Command">
            <summary>Sets the shim of TestCase.&lt;.ctor&gt;b__0(Command p)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestCase._ctorb__1String">
            <summary>Sets the shim of TestCase.&lt;.ctor&gt;b__1(String p)</summary>
        </member>
        <member name="T:Logic.Fakes.ShimTestCase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestCase.AllInstances.CommandsGet">
            <summary>Sets the shim of TestCase.get_Commands()</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestCase.AllInstances.CommandsSetReadOnlyCollectionOfCommand">
            <summary>Sets the shim of TestCase.set_Commands(ReadOnlyCollection`1&lt;Command&gt; value)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestCase.AllInstances.DescriptionGet">
            <summary>Sets the shim of TestCase.get_Description()</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestCase.AllInstances.DescriptionSetString">
            <summary>Sets the shim of TestCase.set_Description(String value)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestCase.AllInstances.IdGet">
            <summary>Sets the shim of TestCase.get_Id()</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestCase.AllInstances.IdSetString">
            <summary>Sets the shim of TestCase.set_Id(String value)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestCase.AllInstances.PassTestGet">
            <summary>Sets the shim of TestCase.get_PassTest()</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestCase.AllInstances.PassTestSetBoolean">
            <summary>Sets the shim of TestCase.set_PassTest(Boolean value)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestCase.AllInstances.RunTestContainer">
            <summary>Sets the shim of TestCase.Run(TestContainer container)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestCase.AllInstances.TagGet">
            <summary>Sets the shim of TestCase.get_Tag()</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestCase.AllInstances.TagSetStringArray">
            <summary>Sets the shim of TestCase.set_Tag(String[] value)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestCase.AllInstances._ctorb__1String">
            <summary>Sets the shim of TestCase.&lt;.ctor&gt;b__1(String p)</summary>
        </member>
        <member name="T:Logic.Fakes.ShimTestContainer">
            <summary>Shim type of Logic.TestContainer</summary>
        </member>
        <member name="M:Logic.Fakes.ShimTestContainer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Logic.Fakes.ShimTestContainer.#ctor(Logic.TestContainer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Logic.Fakes.ShimTestContainer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Logic.Fakes.ShimTestContainer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer.ConstructorStringFuncOfXAttributeBooleanArray">
            <summary>Sets the shim of TestContainer.TestContainer(String configFilePath, Func`2&lt;XAttribute,Boolean&gt;[] filterTestCase)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer.DriverGet">
            <summary>Sets the shim of TestContainer.get_Driver()</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer.DriverSetIWebDriver">
            <summary>Sets the shim of TestContainer.set_Driver(IWebDriver value)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer.GetGlobalParameters">
            <summary>Sets the shim of TestContainer.GetGlobalParameters()</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer.GlobalParametersAddValueStringTupleOfTypeString">
            <summary>Sets the shim of TestContainer.GlobalParametersAddValue(String key, Tuple`2&lt;Type,String&gt; value)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer.ParsingEnvironmentSettingConfigString">
            <summary>Sets the shim of TestContainer.ParsingEnvironmentSettingConfig(String configFilePath)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer.PrintTestResult">
            <summary>Sets the shim of TestContainer.PrintTestResult()</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer.SetBrowserDriverKeyValuePairOfStringDictionaryOfStringString">
            <summary>Sets the shim of TestContainer.SetBrowserDriver(KeyValuePair`2&lt;String,Dictionary`2&lt;String,String&gt;&gt; browserSetting)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer.StartTest">
            <summary>Sets the shim of TestContainer.StartTest()</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer._ParsingEnvironmentSettingConfigb__6XAttribute">
            <summary>Sets the shim of TestContainer.&lt;ParsingEnvironmentSettingConfig&gt;b__6(XAttribute attr)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer._ParsingEnvironmentSettingConfigb__7XAttribute">
            <summary>Sets the shim of TestContainer.&lt;ParsingEnvironmentSettingConfig&gt;b__7(XAttribute t)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer._ParsingEnvironmentSettingConfigb__8XAttribute">
            <summary>Sets the shim of TestContainer.&lt;ParsingEnvironmentSettingConfig&gt;b__8(XAttribute t)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer._ParsingEnvironmentSettingConfigb__9XAttribute">
            <summary>Sets the shim of TestContainer.&lt;ParsingEnvironmentSettingConfig&gt;b__9(XAttribute t)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer._ParsingEnvironmentSettingConfigb__aXAttribute">
            <summary>Sets the shim of TestContainer.&lt;ParsingEnvironmentSettingConfig&gt;b__a(XAttribute t)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer._ParsingEnvironmentSettingConfigb__bXElement">
            <summary>Sets the shim of TestContainer.&lt;ParsingEnvironmentSettingConfig&gt;b__b(XElement p)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer._ParsingEnvironmentSettingConfigb__cXElement">
            <summary>Sets the shim of TestContainer.&lt;ParsingEnvironmentSettingConfig&gt;b__c(XElement p)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer._closeBrowserAfterTestCompleteGet">
            <summary>Sets the shim of TestContainer.get__closeBrowserAfterTestComplete()</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer._closeBrowserAfterTestCompleteSetBoolean">
            <summary>Sets the shim of TestContainer.set__closeBrowserAfterTestComplete(Boolean value)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer._commandTimeoutGet">
            <summary>Sets the shim of TestContainer.get__commandTimeout()</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer._commandTimeoutSetInt32">
            <summary>Sets the shim of TestContainer.set__commandTimeout(Int32 value)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer._configFilePathGet">
            <summary>Sets the shim of TestContainer.get__configFilePath()</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer._configFilePathSetString">
            <summary>Sets the shim of TestContainer.set__configFilePath(String value)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer._ctorb__0XAttribute">
            <summary>Sets the shim of TestContainer.&lt;.ctor&gt;b__0(XAttribute testCaseAttr)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer._filePathofScreenshotOnFailGet">
            <summary>Sets the shim of TestContainer.get__filePathofScreenshotOnFail()</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer._filePathofScreenshotOnFailSetString">
            <summary>Sets the shim of TestContainer.set__filePathofScreenshotOnFail(String value)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer._openBrowserInTestGet">
            <summary>Sets the shim of TestContainer.get__openBrowserInTest()</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer._openBrowserInTestSetBoolean">
            <summary>Sets the shim of TestContainer.set__openBrowserInTest(Boolean value)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer._screenshotOnFailGet">
            <summary>Sets the shim of TestContainer.get__screenshotOnFail()</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer._screenshotOnFailSetBoolean">
            <summary>Sets the shim of TestContainer.set__screenshotOnFail(Boolean value)</summary>
        </member>
        <member name="T:Logic.Fakes.ShimTestContainer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer.AllInstances.DriverGet">
            <summary>Sets the shim of TestContainer.get_Driver()</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer.AllInstances.DriverSetIWebDriver">
            <summary>Sets the shim of TestContainer.set_Driver(IWebDriver value)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer.AllInstances.GetGlobalParameters">
            <summary>Sets the shim of TestContainer.GetGlobalParameters()</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer.AllInstances.GlobalParametersAddValueStringTupleOfTypeString">
            <summary>Sets the shim of TestContainer.GlobalParametersAddValue(String key, Tuple`2&lt;Type,String&gt; value)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer.AllInstances.ParsingEnvironmentSettingConfigString">
            <summary>Sets the shim of TestContainer.ParsingEnvironmentSettingConfig(String configFilePath)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer.AllInstances.PrintTestResult">
            <summary>Sets the shim of TestContainer.PrintTestResult()</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer.AllInstances.SetBrowserDriverKeyValuePairOfStringDictionaryOfStringString">
            <summary>Sets the shim of TestContainer.SetBrowserDriver(KeyValuePair`2&lt;String,Dictionary`2&lt;String,String&gt;&gt; browserSetting)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer.AllInstances.StartTest">
            <summary>Sets the shim of TestContainer.StartTest()</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer.AllInstances._closeBrowserAfterTestCompleteGet">
            <summary>Sets the shim of TestContainer.get__closeBrowserAfterTestComplete()</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer.AllInstances._closeBrowserAfterTestCompleteSetBoolean">
            <summary>Sets the shim of TestContainer.set__closeBrowserAfterTestComplete(Boolean value)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer.AllInstances._commandTimeoutGet">
            <summary>Sets the shim of TestContainer.get__commandTimeout()</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer.AllInstances._commandTimeoutSetInt32">
            <summary>Sets the shim of TestContainer.set__commandTimeout(Int32 value)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer.AllInstances._configFilePathGet">
            <summary>Sets the shim of TestContainer.get__configFilePath()</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer.AllInstances._configFilePathSetString">
            <summary>Sets the shim of TestContainer.set__configFilePath(String value)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer.AllInstances._filePathofScreenshotOnFailGet">
            <summary>Sets the shim of TestContainer.get__filePathofScreenshotOnFail()</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer.AllInstances._filePathofScreenshotOnFailSetString">
            <summary>Sets the shim of TestContainer.set__filePathofScreenshotOnFail(String value)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer.AllInstances._openBrowserInTestGet">
            <summary>Sets the shim of TestContainer.get__openBrowserInTest()</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer.AllInstances._openBrowserInTestSetBoolean">
            <summary>Sets the shim of TestContainer.set__openBrowserInTest(Boolean value)</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer.AllInstances._screenshotOnFailGet">
            <summary>Sets the shim of TestContainer.get__screenshotOnFail()</summary>
        </member>
        <member name="P:Logic.Fakes.ShimTestContainer.AllInstances._screenshotOnFailSetBoolean">
            <summary>Sets the shim of TestContainer.set__screenshotOnFail(Boolean value)</summary>
        </member>
        <member name="T:Logic.Fakes.StubLogging">
            <summary>Stub type of Logic.Logging</summary>
        </member>
        <member name="M:Logic.Fakes.StubLogging.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Fakes.StubLogging.InitializeStub">
            <summary>Initializes a new instance of type StubLogging</summary>
        </member>
        <member name="P:Logic.Fakes.StubLogging.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Fakes.StubLogging.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Fakes.StubLogging.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Fakes.StubTestCase">
            <summary>Stub type of Logic.TestCase</summary>
        </member>
        <member name="M:Logic.Fakes.StubTestCase.#ctor(System.String,System.String,System.String[],System.Collections.Generic.List{Logic.Commands.Command})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Fakes.StubTestCase.InitializeStub">
            <summary>Initializes a new instance of type StubTestCase</summary>
        </member>
        <member name="P:Logic.Fakes.StubTestCase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Fakes.StubTestCase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Fakes.StubTestCase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Logic.Fakes.StubTestContainer">
            <summary>Stub type of Logic.TestContainer</summary>
        </member>
        <member name="M:Logic.Fakes.StubTestContainer.#ctor(System.String,System.Func{System.Xml.Linq.XAttribute,System.Boolean}[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Logic.Fakes.StubTestContainer.InitializeStub">
            <summary>Initializes a new instance of type StubTestContainer</summary>
        </member>
        <member name="P:Logic.Fakes.StubTestContainer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Logic.Fakes.StubTestContainer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Logic.Fakes.StubTestContainer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Utilities.Fakes.ShimIniFile">
            <summary>Shim type of Utilities.IniFile</summary>
        </member>
        <member name="M:Utilities.Fakes.ShimIniFile.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Utilities.Fakes.ShimIniFile.#ctor(Utilities.IniFile)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Utilities.Fakes.ShimIniFile.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Utilities.Fakes.ShimIniFile.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.ConstructorString">
            <summary>Sets the shim of IniFile.IniFile(String path)</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.ConvertNullSeperatedStringToStringArrayIntPtrInt32">
            <summary>Sets the shim of IniFile.ConvertNullSeperatedStringToStringArray(IntPtr ptr, Int32 valLength)</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.DeleteKeyStringString">
            <summary>Sets the shim of IniFile.DeleteKey(String sectionName, String keyName)</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.DeleteSectionString">
            <summary>Sets the shim of IniFile.DeleteSection(String sectionName)</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.GetBooleanStringStringBoolean">
            <summary>Sets the shim of IniFile.GetBoolean(String sectionName, String keyName, Boolean defaultValue)</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.GetDoubleStringStringDouble">
            <summary>Sets the shim of IniFile.GetDouble(String sectionName, String keyName, Double defaultValue)</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.GetInt16StringStringInt16">
            <summary>Sets the shim of IniFile.GetInt16(String sectionName, String keyName, Int16 defaultValue)</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.GetInt32StringStringInt32">
            <summary>Sets the shim of IniFile.GetInt32(String sectionName, String keyName, Int32 defaultValue)</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.GetKeyNamesString">
            <summary>Sets the shim of IniFile.GetKeyNames(String sectionName)</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.GetSectionNames">
            <summary>Sets the shim of IniFile.GetSectionNames()</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.GetSectionValuesAsListString">
            <summary>Sets the shim of IniFile.GetSectionValuesAsList(String sectionName)</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.GetSectionValuesString">
            <summary>Sets the shim of IniFile.GetSectionValues(String sectionName)</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.GetStringStringStringString">
            <summary>Sets the shim of IniFile.GetString(String sectionName, String keyName, String defaultValue)</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.PathGet">
            <summary>Sets the shim of IniFile.get_Path()</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.WriteValueInternalStringStringString">
            <summary>Sets the shim of IniFile.WriteValueInternal(String sectionName, String keyName, String value)</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.WriteValueStringStringBoolean">
            <summary>Sets the shim of IniFile.WriteValue(String sectionName, String keyName, Boolean value)</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.WriteValueStringStringDouble">
            <summary>Sets the shim of IniFile.WriteValue(String sectionName, String keyName, Double value)</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.WriteValueStringStringInt16">
            <summary>Sets the shim of IniFile.WriteValue(String sectionName, String keyName, Int16 value)</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.WriteValueStringStringInt32">
            <summary>Sets the shim of IniFile.WriteValue(String sectionName, String keyName, Int32 value)</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.WriteValueStringStringSingle">
            <summary>Sets the shim of IniFile.WriteValue(String sectionName, String keyName, Single value)</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.WriteValueStringStringString">
            <summary>Sets the shim of IniFile.WriteValue(String sectionName, String keyName, String value)</summary>
        </member>
        <member name="T:Utilities.Fakes.ShimIniFile.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.AllInstances.DeleteKeyStringString">
            <summary>Sets the shim of IniFile.DeleteKey(String sectionName, String keyName)</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.AllInstances.DeleteSectionString">
            <summary>Sets the shim of IniFile.DeleteSection(String sectionName)</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.AllInstances.GetBooleanStringStringBoolean">
            <summary>Sets the shim of IniFile.GetBoolean(String sectionName, String keyName, Boolean defaultValue)</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.AllInstances.GetDoubleStringStringDouble">
            <summary>Sets the shim of IniFile.GetDouble(String sectionName, String keyName, Double defaultValue)</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.AllInstances.GetInt16StringStringInt16">
            <summary>Sets the shim of IniFile.GetInt16(String sectionName, String keyName, Int16 defaultValue)</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.AllInstances.GetInt32StringStringInt32">
            <summary>Sets the shim of IniFile.GetInt32(String sectionName, String keyName, Int32 defaultValue)</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.AllInstances.GetKeyNamesString">
            <summary>Sets the shim of IniFile.GetKeyNames(String sectionName)</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.AllInstances.GetSectionNames">
            <summary>Sets the shim of IniFile.GetSectionNames()</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.AllInstances.GetSectionValuesAsListString">
            <summary>Sets the shim of IniFile.GetSectionValuesAsList(String sectionName)</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.AllInstances.GetSectionValuesString">
            <summary>Sets the shim of IniFile.GetSectionValues(String sectionName)</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.AllInstances.GetStringStringStringString">
            <summary>Sets the shim of IniFile.GetString(String sectionName, String keyName, String defaultValue)</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.AllInstances.PathGet">
            <summary>Sets the shim of IniFile.get_Path()</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.AllInstances.WriteValueInternalStringStringString">
            <summary>Sets the shim of IniFile.WriteValueInternal(String sectionName, String keyName, String value)</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.AllInstances.WriteValueStringStringBoolean">
            <summary>Sets the shim of IniFile.WriteValue(String sectionName, String keyName, Boolean value)</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.AllInstances.WriteValueStringStringDouble">
            <summary>Sets the shim of IniFile.WriteValue(String sectionName, String keyName, Double value)</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.AllInstances.WriteValueStringStringInt16">
            <summary>Sets the shim of IniFile.WriteValue(String sectionName, String keyName, Int16 value)</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.AllInstances.WriteValueStringStringInt32">
            <summary>Sets the shim of IniFile.WriteValue(String sectionName, String keyName, Int32 value)</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.AllInstances.WriteValueStringStringSingle">
            <summary>Sets the shim of IniFile.WriteValue(String sectionName, String keyName, Single value)</summary>
        </member>
        <member name="P:Utilities.Fakes.ShimIniFile.AllInstances.WriteValueStringStringString">
            <summary>Sets the shim of IniFile.WriteValue(String sectionName, String keyName, String value)</summary>
        </member>
        <member name="T:Utilities.Fakes.StubIniFile">
            <summary>Stub type of Utilities.IniFile</summary>
        </member>
        <member name="M:Utilities.Fakes.StubIniFile.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Utilities.Fakes.StubIniFile.InitializeStub">
            <summary>Initializes a new instance of type StubIniFile</summary>
        </member>
        <member name="P:Utilities.Fakes.StubIniFile.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Utilities.Fakes.StubIniFile.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Utilities.Fakes.StubIniFile.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
    </members>
</doc>
